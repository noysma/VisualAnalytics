{"ast":null,"code":"import * as d3 from 'd3';\nexport function createChart(data) {\n  const margin = {\n    top: 20,\n    right: 30,\n    bottom: 30,\n    left: 50\n  };\n  const width = 600 - margin.left - margin.right;\n  const height = 400 - margin.top - margin.bottom;\n  const svg = d3.select('#chart').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n  const xScale = d3.scaleTime().domain(d3.extent(data, d => d.monthYear)).range([0, width]);\n  const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.availableBalance)]).range([height, 0]);\n  const educationLevels = d3.nest().key(d => d.educationLevel).entries(data);\n  const line = d3.line().x(d => xScale(d.monthYear)).y(d => yScale(d.availableBalance));\n  svg.selectAll('.line').data(educationLevels).enter().append('path').attr('class', 'line').attr('d', d => line(d.values)).style('stroke', d => getColor(d.key));\n  svg.append('g').attr('transform', `translate(0, ${height})`).call(d3.axisBottom(xScale));\n  svg.append('g').call(d3.axisLeft(yScale));\n  function getColor(educationLevel) {\n    switch (educationLevel) {\n      case 'Bachelors':\n        return 'blue';\n      case 'Graduate':\n        return 'green';\n      case 'HighSchoolOrCollege':\n        return 'orange';\n      case 'Low':\n        return 'red';\n      default:\n        return 'gray';\n    }\n  }\n}","map":{"version":3,"names":["d3","createChart","data","margin","top","right","bottom","left","width","height","svg","select","append","attr","xScale","scaleTime","domain","extent","d","monthYear","range","yScale","scaleLinear","max","availableBalance","educationLevels","nest","key","educationLevel","entries","line","x","y","selectAll","enter","values","style","getColor","call","axisBottom","axisLeft"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/FinancialHealth.js"],"sourcesContent":["import * as d3 from 'd3';\n\nexport function createChart(data) {\n  const margin = { top: 20, right: 30, bottom: 30, left: 50 };\n  const width = 600 - margin.left - margin.right;\n  const height = 400 - margin.top - margin.bottom;\n\n  const svg = d3.select('#chart')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n  const xScale = d3.scaleTime()\n    .domain(d3.extent(data, d => d.monthYear))\n    .range([0, width]);\n\n  const yScale = d3.scaleLinear()\n    .domain([0, d3.max(data, d => d.availableBalance)])\n    .range([height, 0]);\n\n  const educationLevels = d3.nest()\n    .key(d => d.educationLevel)\n    .entries(data);\n\n  const line = d3.line()\n    .x(d => xScale(d.monthYear))\n    .y(d => yScale(d.availableBalance));\n\n  svg.selectAll('.line')\n    .data(educationLevels)\n    .enter()\n    .append('path')\n    .attr('class', 'line')\n    .attr('d', d => line(d.values))\n    .style('stroke', d => getColor(d.key));\n\n  svg.append('g')\n    .attr('transform', `translate(0, ${height})`)\n    .call(d3.axisBottom(xScale));\n\n  svg.append('g')\n    .call(d3.axisLeft(yScale));\n\n  function getColor(educationLevel) {\n    switch (educationLevel) {\n      case 'Bachelors':\n        return 'blue';\n      case 'Graduate':\n        return 'green';\n      case 'HighSchoolOrCollege':\n        return 'orange';\n      case 'Low':\n        return 'red';\n      default:\n        return 'gray';\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
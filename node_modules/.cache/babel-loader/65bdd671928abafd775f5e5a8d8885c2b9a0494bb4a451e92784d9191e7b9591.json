{"ast":null,"code":"import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n  function me(selection) {\n    const buildingTypes = d3.groups(selection.datum().map(d => d.properties.buildingType), d => d).map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const path = d3.geoPath().projection(projection);\n    selection.selectAll(\"path\").data(selection.datum()).join(\"path\").attr(\"d\", path).attr(\"fill\", color).style(\"stroke\", \"grey\");\n  }\n  me.color = function () {\n    return color;\n  };\n  me.extent = function () {\n    return extent;\n  };\n  return me;\n}\nfunction BuildingPub() {\n  const colorScale = d3.scaleSequential(d3.interpolateBlues);\n  function me(selection, extent) {\n    const pubIds = d3.groups(selection.datum().map(d => d.properties.location), d => d).map(d => d[0]);\n    console.log(\"pubIds\", pubIds);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const hourlyCostExtent = d3.extent(selection.datum(), d => d.properties.hourlyCost);\n    colorScale.domain(hourlyCostExtent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\").attr(\"width\", 200).attr(\"height\", 200);\n\n    // Crea intervalli di valori per la legenda\n    const minValue = hourlyCostExtent[0];\n    const maxValue = hourlyCostExtent[1];\n    const range1End = 8;\n    const range2End = 10;\n    const range3End = 12;\n    const tickValues = [[minValue, range1End], [range1End, range2End], [range2End, range3End], [range3End, maxValue]];\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\").data(tickValues).enter().append(\"rect\").attr(\"class\", \"legend-rect\").attr(\"x\", 10).attr(\"y\", (d, i) => 10 + i * 40).attr(\"width\", 20).attr(\"height\", 30).attr(\"fill\", d => colorScale((d[0] + d[1]) / 2));\n\n    // Aggiungi le etichette per gli intervalli di valori nella legenda\n    legendSvg.selectAll(\".legend-label\").data(tickValues).enter().append(\"text\").attr(\"class\", \"legend-label\").attr(\"x\", 40).attr(\"y\", (d, i) => 25 + i * 40).text(d => {\n      if (d[0] === minValue && d[1] === range1End) {\n        return `< ${d[1].toFixed(2)}`;\n      } else if (d[0] === range3End && d[1] === maxValue) {\n        return `> ${d[0].toFixed(2)}`;\n      } else {\n        return `${d[0].toFixed(2)} - ${d[1].toFixed(2)}`;\n      }\n    });\n\n    // Aggiungi i punti sulla mappa\n    selection.selectAll(\".pub\").data(selection.datum()).join(\"circle\").attr(\"class\", \"pub\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => colorScale(d.properties.hourlyCost)).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const hourlyCost = d.properties.hourlyCost;\n      tooltip.style(\"opacity\", 1).html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\nfunction BuildingRestaurant() {\n  const colorScale = d3.scaleDiverging(d3.interpolateReds);\n  function me(selection, extent) {\n    const restaurantData = selection.datum();\n    const restaurantId = d3.groups(restaurantData, d => d.properties.restaurantId).map(d => ({\n      restaurantId: d[0],\n      totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n    }));\n    console.log(\"restaurantData\", restaurantData);\n    console.log(\"restaurantId\", restaurantId);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n    colorScale.domain(foodCostExtent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n    selection.selectAll(\".restaurant\").data(restaurantData).join(\"circle\").attr(\"class\", \"restaurant\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => colorScale(d.properties.foodCost)).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const foodCost = d.properties.foodCost;\n      tooltip.style(\"opacity\", 1).html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\nexport { BuildingMap, BuildingPub, BuildingRestaurant };","map":{"version":3,"names":["d3","BuildingMap","color","extent","me","selection","buildingTypes","groups","datum","map","d","properties","buildingType","console","log","type","geometries","geometry","projection","geoIdentity","reflectY","fitSize","path","geoPath","selectAll","data","join","attr","style","BuildingPub","colorScale","scaleSequential","interpolateBlues","pubIds","location","hourlyCostExtent","hourlyCost","domain","tooltip","select","append","legendSvg","minValue","maxValue","range1End","range2End","range3End","tickValues","enter","i","text","toFixed","coordinates","on","event","html","format","pageX","pageY","BuildingRestaurant","scaleDiverging","interpolateReds","restaurantData","restaurantId","totalFoodCost","sum","foodCost","foodCostExtent"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/BusinessStatus.js"],"sourcesContent":["import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n\n  function me(selection) {\n    const buildingTypes = d3\n      .groups(selection.datum().map(d => d.properties.buildingType), d => d)\n      .map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const path = d3.geoPath().projection(projection);\n\n    selection\n      .selectAll(\"path\")\n      .data(selection.datum())\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", color)\n      .style(\"stroke\", \"grey\");\n  }\n\n  me.color = function () {\n    return color;\n  };\n\n  me.extent = function() {\n    return extent\n  };\n\n  return me;\n}\n\n\nfunction BuildingPub() {\n  const colorScale = d3.scaleSequential(d3.interpolateBlues);\n\n  function me(selection, extent) {\n    const pubIds = d3\n      .groups(selection.datum().map(d => d.properties.location), d => d)\n      .map(d => d[0]);\n\n    console.log(\"pubIds\", pubIds);\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const hourlyCostExtent = d3.extent(selection.datum(), d => d.properties.hourlyCost);\n    colorScale.domain(hourlyCostExtent);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\")\n      .attr(\"width\", 200)\n      .attr(\"height\", 200);\n\n    // Crea intervalli di valori per la legenda\n    const minValue = hourlyCostExtent[0];\n    const maxValue = hourlyCostExtent[1];\n    const range1End = 8;\n    const range2End = 10;\n    const range3End = 12;\n\n    const tickValues = [\n      [minValue, range1End],\n      [range1End, range2End],\n      [range2End, range3End],\n      [range3End, maxValue]\n    ];\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\")\n      .data(tickValues)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"legend-rect\")\n      .attr(\"x\", 10)\n      .attr(\"y\", (d, i) => 10 + i * 40)\n      .attr(\"width\", 20)\n      .attr(\"height\", 30)\n      .attr(\"fill\", d => colorScale((d[0] + d[1]) / 2));\n\n    // Aggiungi le etichette per gli intervalli di valori nella legenda\n    legendSvg.selectAll(\".legend-label\")\n      .data(tickValues)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"legend-label\")\n      .attr(\"x\", 40)\n      .attr(\"y\", (d, i) => 25 + i * 40)\n      .text(d => {\n        if (d[0] === minValue && d[1] === range1End) {\n          return `< ${d[1].toFixed(2)}`;\n        } else if (d[0] === range3End && d[1] === maxValue) {\n          return `> ${d[0].toFixed(2)}`;\n        } else {\n          return `${d[0].toFixed(2)} - ${d[1].toFixed(2)}`;\n        }\n      });\n\n    // Aggiungi i punti sulla mappa\n    selection\n      .selectAll(\".pub\")\n      .data(selection.datum())\n      .join(\"circle\")\n      .attr(\"class\", \"pub\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 10)\n      .attr(\"fill\", d => colorScale(d.properties.hourlyCost))\n      .style(\"stroke\", \"black\")\n      .on(\"mouseover\", (event, d) => {\n        const hourlyCost = d.properties.hourlyCost;\n        tooltip\n          .style(\"opacity\", 1)\n          .html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`)\n          .style(\"left\", event.pageX + \"px\")\n          .style(\"top\", event.pageY + \"px\");\n      })\n      .on(\"mouseout\", () => {\n        tooltip.style(\"opacity\", 0);\n      });\n  }\n\n  return me;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nfunction BuildingRestaurant() {\n  const colorScale = d3.scaleDiverging(d3.interpolateReds);\n\n  function me(selection, extent) {\n    const restaurantData = selection.datum();\n\n    const restaurantId = d3\n      .groups(restaurantData, d => d.properties.restaurantId)\n      .map(d => ({\n        restaurantId: d[0],\n        totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n      }));\n\n    console.log(\"restaurantData\", restaurantData);\n    console.log(\"restaurantId\", restaurantId);\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n    colorScale.domain(foodCostExtent);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    selection\n      .selectAll(\".restaurant\")\n      .data(restaurantData)\n      .join(\"circle\")\n      .attr(\"class\", \"restaurant\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 10)\n      .attr(\"fill\", d => colorScale(d.properties.foodCost))\n      .style(\"stroke\", \"black\")\n      .on(\"mouseover\", (event, d) => {\n        const foodCost = d.properties.foodCost;\n        tooltip\n          .style(\"opacity\", 1)\n          .html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`)\n          .style(\"left\", event.pageX + \"px\")\n          .style(\"top\", event.pageY + \"px\");\n      })\n      .on(\"mouseout\", () => {\n        tooltip.style(\"opacity\", 0);\n      });\n  }\n\n  return me;\n}\n\nexport { BuildingMap, BuildingPub, BuildingRestaurant };\n\n  "],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,IAAI;;AAExB;AACA,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAMC,KAAK,GAAG,SAAS;EACvB,IAAIC,MAAM;EAEV,SAASC,EAAEA,CAACC,SAAS,EAAE;IACrB,MAAMC,aAAa,GAAGN,EAAE,CACrBO,MAAM,CAACF,SAAS,CAACG,KAAK,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,CAACC,YAAY,CAAC,EAAEF,CAAC,IAAIA,CAAC,CAAC,CACrED,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC;IACjBG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,aAAa,CAAC;IAE3CH,MAAM,GAAG;MACPY,IAAI,EAAE,oBAAoB;MAC1BC,UAAU,EAAEX,SAAS,CAACG,KAAK,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACO,QAAQ;IACnD,CAAC;IAED,MAAMC,UAAU,GAAGlB,EAAE,CAClBmB,WAAW,CAAC,CAAC,CACbC,QAAQ,CAAC,IAAI,CAAC,CACdC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAElB,MAAM,CAAC;IAE9B,MAAMmB,IAAI,GAAGtB,EAAE,CAACuB,OAAO,CAAC,CAAC,CAACL,UAAU,CAACA,UAAU,CAAC;IAEhDb,SAAS,CACNmB,SAAS,CAAC,MAAM,CAAC,CACjBC,IAAI,CAACpB,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CACvBkB,IAAI,CAAC,MAAM,CAAC,CACZC,IAAI,CAAC,GAAG,EAAEL,IAAI,CAAC,CACfK,IAAI,CAAC,MAAM,EAAEzB,KAAK,CAAC,CACnB0B,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC;EAC5B;EAEAxB,EAAE,CAACF,KAAK,GAAG,YAAY;IACrB,OAAOA,KAAK;EACd,CAAC;EAEDE,EAAE,CAACD,MAAM,GAAG,YAAW;IACrB,OAAOA,MAAM;EACf,CAAC;EAED,OAAOC,EAAE;AACX;AAGA,SAASyB,WAAWA,CAAA,EAAG;EACrB,MAAMC,UAAU,GAAG9B,EAAE,CAAC+B,eAAe,CAAC/B,EAAE,CAACgC,gBAAgB,CAAC;EAE1D,SAAS5B,EAAEA,CAACC,SAAS,EAAEF,MAAM,EAAE;IAC7B,MAAM8B,MAAM,GAAGjC,EAAE,CACdO,MAAM,CAACF,SAAS,CAACG,KAAK,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,CAACuB,QAAQ,CAAC,EAAExB,CAAC,IAAIA,CAAC,CAAC,CACjED,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC;IAEjBG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEmB,MAAM,CAAC;IAE7B,MAAMf,UAAU,GAAGlB,EAAE,CAClBmB,WAAW,CAAC,CAAC,CACbC,QAAQ,CAAC,IAAI,CAAC,CACdC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAElB,MAAM,CAAC;IAE9B,MAAMgC,gBAAgB,GAAGnC,EAAE,CAACG,MAAM,CAACE,SAAS,CAACG,KAAK,CAAC,CAAC,EAAEE,CAAC,IAAIA,CAAC,CAACC,UAAU,CAACyB,UAAU,CAAC;IACnFN,UAAU,CAACO,MAAM,CAACF,gBAAgB,CAAC;IAEnC,MAAMG,OAAO,GAAGtC,EAAE,CACfuC,MAAM,CAAC,MAAM,CAAC,CACdC,MAAM,CAAC,KAAK,CAAC,CACbb,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;;IAEtB;IACA,MAAMa,SAAS,GAAGpC,SAAS,CAACmC,MAAM,CAAC,KAAK,CAAC,CACtCb,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAClBA,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;;IAEtB;IACA,MAAMe,QAAQ,GAAGP,gBAAgB,CAAC,CAAC,CAAC;IACpC,MAAMQ,QAAQ,GAAGR,gBAAgB,CAAC,CAAC,CAAC;IACpC,MAAMS,SAAS,GAAG,CAAC;IACnB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,SAAS,GAAG,EAAE;IAEpB,MAAMC,UAAU,GAAG,CACjB,CAACL,QAAQ,EAAEE,SAAS,CAAC,EACrB,CAACA,SAAS,EAAEC,SAAS,CAAC,EACtB,CAACA,SAAS,EAAEC,SAAS,CAAC,EACtB,CAACA,SAAS,EAAEH,QAAQ,CAAC,CACtB;;IAED;IACAF,SAAS,CAACjB,SAAS,CAAC,cAAc,CAAC,CAChCC,IAAI,CAACsB,UAAU,CAAC,CAChBC,KAAK,CAAC,CAAC,CACPR,MAAM,CAAC,MAAM,CAAC,CACdb,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAC5BA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,GAAG,EAAE,CAACjB,CAAC,EAAEuC,CAAC,KAAK,EAAE,GAAGA,CAAC,GAAG,EAAE,CAAC,CAChCtB,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,EAAEjB,CAAC,IAAIoB,UAAU,CAAC,CAACpB,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEnD;IACA+B,SAAS,CAACjB,SAAS,CAAC,eAAe,CAAC,CACjCC,IAAI,CAACsB,UAAU,CAAC,CAChBC,KAAK,CAAC,CAAC,CACPR,MAAM,CAAC,MAAM,CAAC,CACdb,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAC7BA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,GAAG,EAAE,CAACjB,CAAC,EAAEuC,CAAC,KAAK,EAAE,GAAGA,CAAC,GAAG,EAAE,CAAC,CAChCC,IAAI,CAACxC,CAAC,IAAI;MACT,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAKgC,QAAQ,IAAIhC,CAAC,CAAC,CAAC,CAAC,KAAKkC,SAAS,EAAE;QAC3C,OAAQ,KAAIlC,CAAC,CAAC,CAAC,CAAC,CAACyC,OAAO,CAAC,CAAC,CAAE,EAAC;MAC/B,CAAC,MAAM,IAAIzC,CAAC,CAAC,CAAC,CAAC,KAAKoC,SAAS,IAAIpC,CAAC,CAAC,CAAC,CAAC,KAAKiC,QAAQ,EAAE;QAClD,OAAQ,KAAIjC,CAAC,CAAC,CAAC,CAAC,CAACyC,OAAO,CAAC,CAAC,CAAE,EAAC;MAC/B,CAAC,MAAM;QACL,OAAQ,GAAEzC,CAAC,CAAC,CAAC,CAAC,CAACyC,OAAO,CAAC,CAAC,CAAE,MAAKzC,CAAC,CAAC,CAAC,CAAC,CAACyC,OAAO,CAAC,CAAC,CAAE,EAAC;MAClD;IACF,CAAC,CAAC;;IAEJ;IACA9C,SAAS,CACNmB,SAAS,CAAC,MAAM,CAAC,CACjBC,IAAI,CAACpB,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CACvBkB,IAAI,CAAC,QAAQ,CAAC,CACdC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CACpBA,IAAI,CAAC,IAAI,EAAEjB,CAAC,IAAIQ,UAAU,CAACR,CAAC,CAACO,QAAQ,CAACmC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CACtDzB,IAAI,CAAC,IAAI,EAAEjB,CAAC,IAAIQ,UAAU,CAACR,CAAC,CAACO,QAAQ,CAACmC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CACtDzB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,MAAM,EAAEjB,CAAC,IAAIoB,UAAU,CAACpB,CAAC,CAACC,UAAU,CAACyB,UAAU,CAAC,CAAC,CACtDR,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CACxByB,EAAE,CAAC,WAAW,EAAE,CAACC,KAAK,EAAE5C,CAAC,KAAK;MAC7B,MAAM0B,UAAU,GAAG1B,CAAC,CAACC,UAAU,CAACyB,UAAU;MAC1CE,OAAO,CACJV,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnB2B,IAAI,CAAE,kBAAiBvD,EAAE,CAACwD,MAAM,CAAC,KAAK,CAAC,CAACpB,UAAU,CAAE,EAAC,CAAC,CACtDR,KAAK,CAAC,MAAM,EAAE0B,KAAK,CAACG,KAAK,GAAG,IAAI,CAAC,CACjC7B,KAAK,CAAC,KAAK,EAAE0B,KAAK,CAACI,KAAK,GAAG,IAAI,CAAC;IACrC,CAAC,CAAC,CACDL,EAAE,CAAC,UAAU,EAAE,MAAM;MACpBf,OAAO,CAACV,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC;EACN;EAEA,OAAOxB,EAAE;AACX;AAaA,SAASuD,kBAAkBA,CAAA,EAAG;EAC5B,MAAM7B,UAAU,GAAG9B,EAAE,CAAC4D,cAAc,CAAC5D,EAAE,CAAC6D,eAAe,CAAC;EAExD,SAASzD,EAAEA,CAACC,SAAS,EAAEF,MAAM,EAAE;IAC7B,MAAM2D,cAAc,GAAGzD,SAAS,CAACG,KAAK,CAAC,CAAC;IAExC,MAAMuD,YAAY,GAAG/D,EAAE,CACpBO,MAAM,CAACuD,cAAc,EAAEpD,CAAC,IAAIA,CAAC,CAACC,UAAU,CAACoD,YAAY,CAAC,CACtDtD,GAAG,CAACC,CAAC,KAAK;MACTqD,YAAY,EAAErD,CAAC,CAAC,CAAC,CAAC;MAClBsD,aAAa,EAAEhE,EAAE,CAACiE,GAAG,CAACvD,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACC,UAAU,CAACuD,QAAQ;IACxD,CAAC,CAAC,CAAC;IAELrD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEgD,cAAc,CAAC;IAC7CjD,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEiD,YAAY,CAAC;IAEzC,MAAM7C,UAAU,GAAGlB,EAAE,CAClBmB,WAAW,CAAC,CAAC,CACbC,QAAQ,CAAC,IAAI,CAAC,CACdC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAElB,MAAM,CAAC;IAE9B,MAAMgE,cAAc,GAAGnE,EAAE,CAACG,MAAM,CAAC2D,cAAc,EAAEpD,CAAC,IAAIA,CAAC,CAACC,UAAU,CAACuD,QAAQ,CAAC;IAC5EpC,UAAU,CAACO,MAAM,CAAC8B,cAAc,CAAC;IAEjC,MAAM7B,OAAO,GAAGtC,EAAE,CACfuC,MAAM,CAAC,MAAM,CAAC,CACdC,MAAM,CAAC,KAAK,CAAC,CACbb,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAEtBvB,SAAS,CACNmB,SAAS,CAAC,aAAa,CAAC,CACxBC,IAAI,CAACqC,cAAc,CAAC,CACpBpC,IAAI,CAAC,QAAQ,CAAC,CACdC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BA,IAAI,CAAC,IAAI,EAAEjB,CAAC,IAAIQ,UAAU,CAACR,CAAC,CAACO,QAAQ,CAACmC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CACtDzB,IAAI,CAAC,IAAI,EAAEjB,CAAC,IAAIQ,UAAU,CAACR,CAAC,CAACO,QAAQ,CAACmC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CACtDzB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,MAAM,EAAEjB,CAAC,IAAIoB,UAAU,CAACpB,CAAC,CAACC,UAAU,CAACuD,QAAQ,CAAC,CAAC,CACpDtC,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CACxByB,EAAE,CAAC,WAAW,EAAE,CAACC,KAAK,EAAE5C,CAAC,KAAK;MAC7B,MAAMwD,QAAQ,GAAGxD,CAAC,CAACC,UAAU,CAACuD,QAAQ;MACtC5B,OAAO,CACJV,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnB2B,IAAI,CAAE,gBAAevD,EAAE,CAACwD,MAAM,CAAC,KAAK,CAAC,CAACU,QAAQ,CAAE,EAAC,CAAC,CAClDtC,KAAK,CAAC,MAAM,EAAE0B,KAAK,CAACG,KAAK,GAAG,IAAI,CAAC,CACjC7B,KAAK,CAAC,KAAK,EAAE0B,KAAK,CAACI,KAAK,GAAG,IAAI,CAAC;IACrC,CAAC,CAAC,CACDL,EAAE,CAAC,UAAU,EAAE,MAAM;MACpBf,OAAO,CAACV,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC;EACN;EAEA,OAAOxB,EAAE;AACX;AAEA,SAASH,WAAW,EAAE4B,WAAW,EAAE8B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
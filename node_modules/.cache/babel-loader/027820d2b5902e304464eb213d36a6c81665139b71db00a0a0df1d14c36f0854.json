{"ast":null,"code":"import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n  function me(selection) {\n    const buildingTypes = d3.groups(selection.datum().map(d => d.properties.buildingType), d => d).map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const path = d3.geoPath().projection(projection);\n    selection.selectAll(\"path\").data(selection.datum()).join(\"path\").attr(\"d\", path).attr(\"fill\", color).style(\"stroke\", \"grey\");\n  }\n  me.color = function () {\n    return color;\n  };\n  me.extent = function () {\n    return extent;\n  };\n  return me;\n}\nfunction BuildingPub() {\n  const colorScale = d3.scaleOrdinal().domain(['<8', '8-9.99', '10-12', '>12']).range(['#FF0000', '#FF6347', '#FF4500', '#FF0000']);\n  function me(selection, extent) {\n    const pubIds = d3.groups(selection.datum().map(d => d.properties.location), d => d).map(d => d[0]);\n    console.log(\"pubIds\", pubIds);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\").attr(\"width\", 200).attr(\"height\", 200);\n\n    // Crea intervalli di valori per la legenda\n    const tickValues = ['<8', '8-9.99', '10-12', '>12'];\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\").data(tickValues).enter().append(\"rect\").attr(\"class\", \"legend-rect\").attr(\"x\", 10).attr(\"y\", (d, i) => 10 + i * 40).attr(\"width\", 20).attr(\"height\", 30).attr(\"fill\", d => colorScale(d));\n\n    // Aggiungi le etichette per gli intervalli di valori nella legenda\n    legendSvg.selectAll(\".legend-label\").data(tickValues).enter().append(\"text\").attr(\"class\", \"legend-label\").attr(\"x\", 40).attr(\"y\", (d, i) => 25 + i * 40).text(d => d);\n\n    // Aggiungi i punti sulla mappa\n    selection.selectAll(\".pub\").data(selection.datum()).join(\"circle\").attr(\"class\", \"pub\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => {\n      if (d.properties.hourlyCost < 8) {\n        return colorScale('<8');\n      } else if (d.properties.hourlyCost < 10) {\n        return colorScale('8-9.99');\n      } else if (d.properties.hourlyCost <= 12) {\n        return colorScale('10-12');\n      } else {\n        return colorScale('>12');\n      }\n    }).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const hourlyCost = d.properties.hourlyCost;\n      tooltip.style(\"opacity\", 1).html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\nfunction BuildingRestaurant() {\n  const colorScale = d3.scaleDiverging(d3.interpolateReds);\n  function me(selection, extent) {\n    const restaurantData = selection.datum();\n    const restaurantId = d3.groups(restaurantData, d => d.properties.restaurantId).map(d => ({\n      restaurantId: d[0],\n      totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n    }));\n    console.log(\"restaurantData\", restaurantData);\n    console.log(\"restaurantId\", restaurantId);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n    colorScale.domain(foodCostExtent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n    selection.selectAll(\".restaurant\").data(restaurantData).join(\"circle\").attr(\"class\", \"restaurant\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => colorScale(d.properties.foodCost)).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const foodCost = d.properties.foodCost;\n      tooltip.style(\"opacity\", 1).html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\nexport { BuildingMap, BuildingPub, BuildingRestaurant };","map":{"version":3,"names":["d3","BuildingMap","color","extent","me","selection","buildingTypes","groups","datum","map","d","properties","buildingType","console","log","type","geometries","geometry","projection","geoIdentity","reflectY","fitSize","path","geoPath","selectAll","data","join","attr","style","BuildingPub","colorScale","scaleOrdinal","domain","range","pubIds","location","tooltip","select","append","legendSvg","tickValues","enter","i","text","coordinates","hourlyCost","on","event","html","format","pageX","pageY","BuildingRestaurant","scaleDiverging","interpolateReds","restaurantData","restaurantId","totalFoodCost","sum","foodCost","foodCostExtent"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/BusinessStatus.js"],"sourcesContent":["import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n\n  function me(selection) {\n    const buildingTypes = d3\n      .groups(selection.datum().map(d => d.properties.buildingType), d => d)\n      .map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const path = d3.geoPath().projection(projection);\n\n    selection\n      .selectAll(\"path\")\n      .data(selection.datum())\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", color)\n      .style(\"stroke\", \"grey\");\n  }\n\n  me.color = function () {\n    return color;\n  };\n\n  me.extent = function() {\n    return extent\n  };\n\n  return me;\n}\n\n\nfunction BuildingPub() {\n  const colorScale = d3.scaleOrdinal()\n    .domain(['<8', '8-9.99', '10-12', '>12'])\n    .range(['#FF0000', '#FF6347', '#FF4500', '#FF0000']);\n\n  function me(selection, extent) {\n    const pubIds = d3\n      .groups(selection.datum().map(d => d.properties.location), d => d)\n      .map(d => d[0]);\n\n    console.log(\"pubIds\", pubIds);\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\")\n      .attr(\"width\", 200)\n      .attr(\"height\", 200);\n\n    // Crea intervalli di valori per la legenda\n    const tickValues = ['<8', '8-9.99', '10-12', '>12'];\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\")\n      .data(tickValues)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"legend-rect\")\n      .attr(\"x\", 10)\n      .attr(\"y\", (d, i) => 10 + i * 40)\n      .attr(\"width\", 20)\n      .attr(\"height\", 30)\n      .attr(\"fill\", d => colorScale(d));\n\n    // Aggiungi le etichette per gli intervalli di valori nella legenda\n    legendSvg.selectAll(\".legend-label\")\n      .data(tickValues)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"legend-label\")\n      .attr(\"x\", 40)\n      .attr(\"y\", (d, i) => 25 + i * 40)\n      .text(d => d);\n\n    // Aggiungi i punti sulla mappa\n    selection\n      .selectAll(\".pub\")\n      .data(selection.datum())\n      .join(\"circle\")\n      .attr(\"class\", \"pub\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 10)\n      .attr(\"fill\", d => {\n        if (d.properties.hourlyCost < 8) {\n          return colorScale('<8');\n        } else if (d.properties.hourlyCost < 10) {\n          return colorScale('8-9.99');\n        } else if (d.properties.hourlyCost <= 12) {\n          return colorScale('10-12');\n        } else {\n          return colorScale('>12');\n        }\n      })\n      .style(\"stroke\", \"black\")\n      .on(\"mouseover\", (event, d) => {\n        const hourlyCost = d.properties.hourlyCost;\n        tooltip\n          .style(\"opacity\", 1)\n          .html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`)\n          .style(\"left\", event.pageX + \"px\")\n          .style(\"top\", event.pageY + \"px\");\n      })\n      .on(\"mouseout\", () => {\n        tooltip.style(\"opacity\", 0);\n      });\n  }\n\n  return me;\n}\n\n\n\n\n\nfunction BuildingRestaurant() {\n  const colorScale = d3.scaleDiverging(d3.interpolateReds);\n\n  function me(selection, extent) {\n    const restaurantData = selection.datum();\n\n    const restaurantId = d3\n      .groups(restaurantData, d => d.properties.restaurantId)\n      .map(d => ({\n        restaurantId: d[0],\n        totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n      }));\n\n    console.log(\"restaurantData\", restaurantData);\n    console.log(\"restaurantId\", restaurantId);\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n    colorScale.domain(foodCostExtent);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    selection\n      .selectAll(\".restaurant\")\n      .data(restaurantData)\n      .join(\"circle\")\n      .attr(\"class\", \"restaurant\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 10)\n      .attr(\"fill\", d => colorScale(d.properties.foodCost))\n      .style(\"stroke\", \"black\")\n      .on(\"mouseover\", (event, d) => {\n        const foodCost = d.properties.foodCost;\n        tooltip\n          .style(\"opacity\", 1)\n          .html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`)\n          .style(\"left\", event.pageX + \"px\")\n          .style(\"top\", event.pageY + \"px\");\n      })\n      .on(\"mouseout\", () => {\n        tooltip.style(\"opacity\", 0);\n      });\n  }\n\n  return me;\n}\n\nexport { BuildingMap, BuildingPub, BuildingRestaurant };\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
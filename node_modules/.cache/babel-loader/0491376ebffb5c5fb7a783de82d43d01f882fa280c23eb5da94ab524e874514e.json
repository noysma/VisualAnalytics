{"ast":null,"code":"import * as d3 from 'd3';\nexport function createScatterplot(data, container, tooltip) {\n  // set the dimensions and margins of the graph\n  const margin = {\n    top: 10,\n    right: 30,\n    bottom: 30,\n    left: 60\n  };\n  const width = 700 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n\n  // append the svg object to the container\n  const svg = d3.select(container).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n  // Get the maximum values for x and y axes\n  const maxX = d3.max(data, d => +d.hourlyRate);\n  const maxY = d3.max(data, d => +d.counts);\n\n  // Add X axis\n  const x = d3.scaleLinear().domain([0, maxX + 5]).range([0, width + 5]);\n  svg.append('g').attr('transform', `translate(0, ${height})`).call(d3.axisBottom(x));\n\n  // Add Y axis\n  const y = d3.scaleLinear().domain([0, maxY + 5]).range([height, 0]);\n  svg.append('g').call(d3.axisLeft(y));\n\n  // Add dots\n  const dots = svg.selectAll('circle').data(data).enter().append('circle').attr('cx', d => x(+d.hourlyRate)).attr('cy', d => y(+d.counts)).attr('r', 5).style('fill', 'steelblue').on('mouseover', (event, d) => {\n    // Show the jobId details for the corresponding point\n    const tooltipDiv = d3.select(tooltip);\n    tooltipDiv.transition().duration(200).style('opacity', 1);\n    const svgRect = container.getBoundingClientRect();\n    const xPosition = event.clientX - svgRect.left;\n    const yPosition = event.clientY - svgRect.top;\n    tooltipDiv.html(`Job ID: ${d.jobId}`).style('left', `${xPosition - 35}px`).style('top', `${yPosition + 10}px`); // Adjust the y position\n\n    // Highlight all dots with the same jobId\n    const jobId = d.jobId;\n    dots.style('fill', dotData => dotData.jobId === jobId ? 'red' : 'steelblue');\n  }).on('mouseout', () => {\n    // Hide the tooltip\n    const tooltipDiv = d3.select(tooltip);\n    tooltipDiv.transition().duration(500).style('opacity', 0);\n\n    // Restore the original style of all dots\n    dots.style('fill', 'steelblue');\n  });\n}","map":{"version":3,"names":["d3","createScatterplot","data","container","tooltip","margin","top","right","bottom","left","width","height","svg","select","attr","append","maxX","max","d","hourlyRate","maxY","counts","x","scaleLinear","domain","range","call","axisBottom","y","axisLeft","dots","selectAll","enter","style","on","event","tooltipDiv","transition","duration","svgRect","getBoundingClientRect","xPosition","clientX","yPosition","clientY","html","jobId","dotData"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/Turnover.js"],"sourcesContent":["import * as d3 from 'd3';\n\nexport function createScatterplot(data, container, tooltip) {\n  // set the dimensions and margins of the graph\n  const margin = { top: 10, right: 30, bottom: 30, left: 60 };\n  const width = 700 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n\n  // append the svg object to the container\n  const svg = d3.select(container)\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n  // Get the maximum values for x and y axes\n  const maxX = d3.max(data, (d) => +d.hourlyRate);\n  const maxY = d3.max(data, (d) => +d.counts);\n\n  // Add X axis\n  const x = d3.scaleLinear()\n    .domain([0, maxX + 5])\n    .range([0, width + 5]);\n  svg.append('g')\n    .attr('transform', `translate(0, ${height})`)\n    .call(d3.axisBottom(x));\n\n  // Add Y axis\n  const y = d3.scaleLinear()\n    .domain([0, maxY + 5])\n    .range([height, 0]);\n  svg.append('g')\n    .call(d3.axisLeft(y));\n\n  // Add dots\n  const dots = svg.selectAll('circle')\n    .data(data)\n    .enter()\n    .append('circle')\n    .attr('cx', (d) => x(+d.hourlyRate))\n    .attr('cy', (d) => y(+d.counts))\n    .attr('r', 5)\n    .style('fill', 'steelblue')\n    .on('mouseover', (event, d) => {\n      // Show the jobId details for the corresponding point\n      const tooltipDiv = d3.select(tooltip);\n      tooltipDiv.transition().duration(200).style('opacity', 1);\n\n      const svgRect = container.getBoundingClientRect();\n      const xPosition = event.clientX - svgRect.left;\n      const yPosition = event.clientY - svgRect.top;\n\n      tooltipDiv.html(`Job ID: ${d.jobId}`)\n        .style('left', `${xPosition - 35}px`)\n        .style('top', `${yPosition + 10}px`); // Adjust the y position\n\n      // Highlight all dots with the same jobId\n      const jobId = d.jobId;\n      dots.style('fill', (dotData) => (dotData.jobId === jobId ? 'red' : 'steelblue'));\n    })\n    .on('mouseout', () => {\n      // Hide the tooltip\n      const tooltipDiv = d3.select(tooltip);\n      tooltipDiv.transition().duration(500).style('opacity', 0);\n\n      // Restore the original style of all dots\n      dots.style('fill', 'steelblue');\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n  function me(selection) {\n    const buildingTypes = d3.groups(selection.datum().map(d => d.properties.buildingType), d => d).map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const path = d3.geoPath().projection(projection);\n    selection.selectAll(\"path\").data(selection.datum()).join(\"path\").attr(\"d\", path).attr(\"fill\", color).style(\"stroke\", \"grey\");\n  }\n  me.color = function () {\n    return color;\n  };\n  me.extent = function () {\n    return extent;\n  };\n  return me;\n}\n\n// A P A R T M E N T S\nfunction BuildingApt() {\n  function me(selection, extent) {\n    const apartmentIds = d3.groups(selection.datum().map(d => d.properties.apartmentId), d => d).map(d => d[0]);\n    console.log(\"apartmentIds\", apartmentIds);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    selection.selectAll(\".apt\").data(selection.datum()).join(\"circle\").attr(\"class\", \"apt\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 1);\n  }\n  return me;\n}\nfunction BuildingPub() {\n  const colorScale = d3.scaleDiverging(d3.interpolateBlues);\n  function me(selection, extent) {\n    const pubIds = d3.groups(selection.datum().map(d => d.properties.location), d => d).map(d => d[0]);\n    console.log(\"pubIds\", pubIds);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const hourlyCostExtent = d3.extent(selection.datum(), d => d.properties.hourlyCost);\n    colorScale.domain(hourlyCostExtent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\").attr(\"width\", 200).attr(\"height\", 200);\n\n    // Crea una scala lineare per la legenda\n    const legendScale = d3.scaleLinear().domain(hourlyCostExtent).range([10, 200]);\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\").data(d3.range(10)).enter().append(\"rect\").attr(\"class\", \"legend-rect\").attr(\"x\", 10).attr(\"y\", d => 10 + d * 15).attr(\"width\", 20).attr(\"height\", 10).attr(\"fill\", d => colorScale(legendScale.invert(d)));\n\n    // Aggiungi le etichette per i valori corrispondenti nella legenda\n    legendSvg.selectAll(\".legend-label\").data(legendScale.ticks(10)).enter().append(\"text\").attr(\"class\", \"legend-label\").attr(\"x\", 40).attr(\"y\", d => 15 + legendScale(d)).text(d => d.toFixed(2));\n    selection.selectAll(\".pub\").data(selection.datum()).join(\"circle\").attr(\"class\", \"pub\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => colorScale(d.properties.hourlyCost)).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const hourlyCost = d.properties.hourlyCost;\n      tooltip.style(\"opacity\", 1).html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\nfunction BuildingRestaurant() {\n  const colorScale = d3.scaleDiverging(d3.interpolateReds);\n  function me(selection, extent) {\n    const restaurantData = selection.datum();\n    const restaurantId = d3.groups(restaurantData, d => d.properties.restaurantId).map(d => ({\n      restaurantId: d[0],\n      totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n    }));\n    console.log(\"restaurantData\", restaurantData);\n    console.log(\"restaurantId\", restaurantId);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n    colorScale.domain(foodCostExtent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\").attr(\"width\", 200).attr(\"height\", 200);\n\n    // Crea una scala lineare per la legenda\n    const legendScale = d3.scaleLinear().domain(foodCostExtent).range([10, 200]);\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\").data(d3.range(10)).enter().append(\"rect\").attr(\"class\", \"legend-rect\").attr(\"x\", 10).attr(\"y\", d => 10 + d * 15).attr(\"width\", 20).attr(\"height\", 10).attr(\"fill\", d => colorScale(legendScale.invert(d)));\n\n    // Aggiungi le etichette per i valori corrispondenti nella legenda\n    legendSvg.selectAll(\".legend-label\").data(legendScale.ticks(10)).enter().append(\"text\").attr(\"class\", \"legend-label\").attr(\"x\", 40).attr(\"y\", d => 15 + legendScale(d)).text(d => d.toFixed(2));\n    selection.selectAll(\".restaurant\").data(restaurantData).join(\"circle\").attr(\"class\", \"restaurant\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => colorScale(d.properties.foodCost)).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const foodCost = d.properties.foodCost;\n      tooltip.style(\"opacity\", 1).html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\nexport { BuildingMap, BuildingApt, BuildingPub, BuildingRestaurant };","map":{"version":3,"names":["d3","BuildingMap","color","extent","me","selection","buildingTypes","groups","datum","map","d","properties","buildingType","console","log","type","geometries","geometry","projection","geoIdentity","reflectY","fitSize","path","geoPath","selectAll","data","join","attr","style","BuildingApt","apartmentIds","apartmentId","coordinates","BuildingPub","colorScale","scaleDiverging","interpolateBlues","pubIds","location","hourlyCostExtent","hourlyCost","domain","tooltip","select","append","legendSvg","legendScale","scaleLinear","range","enter","invert","ticks","text","toFixed","on","event","html","format","pageX","pageY","BuildingRestaurant","interpolateReds","restaurantData","restaurantId","totalFoodCost","sum","foodCost","foodCostExtent"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/BusinessStatus.js"],"sourcesContent":["import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n\n  function me(selection) {\n    const buildingTypes = d3\n      .groups(selection.datum().map(d => d.properties.buildingType), d => d)\n      .map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const path = d3.geoPath().projection(projection);\n\n    selection\n      .selectAll(\"path\")\n      .data(selection.datum())\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", color)\n      .style(\"stroke\", \"grey\");\n  }\n\n  me.color = function () {\n    return color;\n  };\n\n  me.extent = function() {\n    return extent\n  };\n\n  return me;\n}\n\n// A P A R T M E N T S\nfunction BuildingApt() {\n    function me(selection, extent) {\n      const apartmentIds = d3\n        .groups(selection.datum().map(d => d.properties.apartmentId), d => d)\n        .map(d => d[0]);\n  \n      console.log(\"apartmentIds\", apartmentIds);\n      \n      const projection = d3\n        .geoIdentity()\n        .reflectY(true)\n        .fitSize([650, 650], extent);\n      \n      selection\n        .selectAll(\".apt\")\n        .data(selection.datum())\n        .join(\"circle\")\n        .attr(\"class\", \"apt\")\n        .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n        .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n        .attr(\"r\", 1);\n    }\n  \n    return me;\n  }\n  \n  function BuildingPub() {\n    const colorScale = d3.scaleDiverging(d3.interpolateBlues);\n  \n    function me(selection, extent) {\n      const pubIds = d3\n        .groups(selection.datum().map(d => d.properties.location), d => d)\n        .map(d => d[0]);\n  \n      console.log(\"pubIds\", pubIds);\n  \n      const projection = d3\n        .geoIdentity()\n        .reflectY(true)\n        .fitSize([650, 650], extent);\n  \n      const hourlyCostExtent = d3.extent(selection.datum(), d => d.properties.hourlyCost);\n      colorScale.domain(hourlyCostExtent);\n  \n      const tooltip = d3\n        .select(\"body\")\n        .append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0);\n  \n      // Aggiungi un elemento SVG per la legenda\n      const legendSvg = selection.append(\"svg\")\n        .attr(\"width\", 200)\n        .attr(\"height\", 200);\n  \n      // Crea una scala lineare per la legenda\n      const legendScale = d3.scaleLinear()\n        .domain(hourlyCostExtent)\n        .range([10, 200]);\n  \n      // Aggiungi i rettangoli colorati nella legenda\n      legendSvg.selectAll(\".legend-rect\")\n        .data(d3.range(10))\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"legend-rect\")\n        .attr(\"x\", 10)\n        .attr(\"y\", d => 10 + d * 15)\n        .attr(\"width\", 20)\n        .attr(\"height\", 10)\n        .attr(\"fill\", d => colorScale(legendScale.invert(d)));\n  \n      // Aggiungi le etichette per i valori corrispondenti nella legenda\n      legendSvg.selectAll(\".legend-label\")\n        .data(legendScale.ticks(10))\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"legend-label\")\n        .attr(\"x\", 40)\n        .attr(\"y\", d => 15 + legendScale(d))\n        .text(d => d.toFixed(2));\n  \n      selection\n        .selectAll(\".pub\")\n        .data(selection.datum())\n        .join(\"circle\")\n        .attr(\"class\", \"pub\")\n        .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n        .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n        .attr(\"r\", 10)\n        .attr(\"fill\", d => colorScale(d.properties.hourlyCost))\n        .style(\"stroke\", \"black\")\n        .on(\"mouseover\", (event, d) => {\n          const hourlyCost = d.properties.hourlyCost;\n          tooltip\n            .style(\"opacity\", 1)\n            .html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`)\n            .style(\"left\", event.pageX + \"px\")\n            .style(\"top\", event.pageY + \"px\");\n        })\n        .on(\"mouseout\", () => {\n          tooltip.style(\"opacity\", 0);\n        });\n    }\n  \n    return me;\n  }\n  \n  function BuildingRestaurant() {\n    const colorScale = d3.scaleDiverging(d3.interpolateReds);\n  \n    function me(selection, extent) {\n      const restaurantData = selection.datum();\n  \n      const restaurantId = d3\n        .groups(restaurantData, d => d.properties.restaurantId)\n        .map(d => ({\n          restaurantId: d[0],\n          totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n        }));\n  \n      console.log(\"restaurantData\", restaurantData);\n      console.log(\"restaurantId\", restaurantId);\n  \n      const projection = d3\n        .geoIdentity()\n        .reflectY(true)\n        .fitSize([650, 650], extent);\n  \n      const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n      colorScale.domain(foodCostExtent);\n  \n      const tooltip = d3\n        .select(\"body\")\n        .append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"opacity\", 0);\n  \n      // Aggiungi un elemento SVG per la legenda\n      const legendSvg = selection.append(\"svg\")\n        .attr(\"width\", 200)\n        .attr(\"height\", 200);\n  \n      // Crea una scala lineare per la legenda\n      const legendScale = d3.scaleLinear()\n        .domain(foodCostExtent)\n        .range([10, 200]);\n  \n      // Aggiungi i rettangoli colorati nella legenda\n      legendSvg.selectAll(\".legend-rect\")\n        .data(d3.range(10))\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"legend-rect\")\n        .attr(\"x\", 10)\n        .attr(\"y\", d => 10 + d * 15)\n        .attr(\"width\", 20)\n        .attr(\"height\", 10)\n        .attr(\"fill\", d => colorScale(legendScale.invert(d)));\n  \n      // Aggiungi le etichette per i valori corrispondenti nella legenda\n      legendSvg.selectAll(\".legend-label\")\n        .data(legendScale.ticks(10))\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"legend-label\")\n        .attr(\"x\", 40)\n        .attr(\"y\", d => 15 + legendScale(d))\n        .text(d => d.toFixed(2));\n  \n      selection\n        .selectAll(\".restaurant\")\n        .data(restaurantData)\n        .join(\"circle\")\n        .attr(\"class\", \"restaurant\")\n        .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n        .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n        .attr(\"r\", 10)\n        .attr(\"fill\", d => colorScale(d.properties.foodCost))\n        .style(\"stroke\", \"black\")\n        .on(\"mouseover\", (event, d) => {\n          const foodCost = d.properties.foodCost;\n          tooltip\n            .style(\"opacity\", 1)\n            .html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`)\n            .style(\"left\", event.pageX + \"px\")\n            .style(\"top\", event.pageY + \"px\");\n        })\n        .on(\"mouseout\", () => {\n          tooltip.style(\"opacity\", 0);\n        });\n    }\n  \n    return me;\n  }\n  \n  export { BuildingMap, BuildingApt, BuildingPub, BuildingRestaurant };\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import * as d3 from 'd3';\n\n// export function createBarChart(data) {\n//   // Impostazioni del grafico\n//   var margin = { top: 20, right: 20, bottom: 30, left: 40 };\n//   var width = 800 - margin.left - margin.right;\n//   var height = 400 - margin.top - margin.bottom;\n\n//   // Creazione dello scale per gli assi\n//   var x = d3.scaleBand()\n//     .range([0, width])\n//     .padding(0.1);\n\n//   var y = d3.scaleLinear()\n//     .range([height, 0]);\n\n//   // Creazione dell'elemento SVG\n//   var svg = d3.select(\"#chart\")\n//     .attr(\"width\", width + margin.left + margin.right)\n//     .attr(\"height\", height + margin.top + margin.bottom)\n//     .append(\"g\")\n//     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//   // Funzione per aggiornare il grafico\n//   function updateChart(startDate) {\n//     // Calcola la data di fine della settimana\n//     var endDate = d3.timeDay.offset(startDate, 6);\n\n//     // Filtra i dati per la settimana selezionata\n//     var filteredData = data.filter(function (d) {\n//       var date = new Date(d.date);\n//       return date >= startDate && date <= endDate;\n//     });\n\n//     // Aggiorna il dominio degli assi\n//     var weekdays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n//     x.domain(weekdays);\n//     y.domain([0, d3.max(filteredData, function (d) { return d.travelDuration; })]);\n\n//     // Rimuovi eventuali barre precedenti\n//     svg.selectAll(\".bar\").remove();\n\n//     // Aggiungi le nuove barre\n//     svg.selectAll(\".bar\")\n//       .data(filteredData)\n//       .enter().append(\"rect\")\n//       .attr(\"class\", \"bar\")\n//       .attr(\"x\", function (d) { return x(weekdays[new Date(d.date).getDay()]); })\n//       .attr(\"width\", x.bandwidth())\n//       .attr(\"y\", function (d) { return y(d.travelDuration); })\n//       .attr(\"height\", function (d) { return height - y(d.travelDuration); });\n\n//     // Aggiorna l'asse x\n//     svg.select(\".x-axis\").call(d3.axisBottom(x));\n\n//   }\n\n//   // Inizializza il grafico con la prima settimana\n//   var initialStartDate = d3.min(data, function (d) { return new Date(d.date); });\n//   updateChart(initialStartDate);\n\n//   // Aggiungi asse x\n//   svg.append(\"g\")\n//     .attr(\"class\", \"x-axis\")\n//     .attr(\"transform\", \"translate(0,\" + height + \")\")\n//     .call(d3.axisBottom(x));\n\n//   // Aggiungi uno slider per cambiare la settimana\n//   var slider = d3.select(\"#slider\")\n//     .append(\"input\")\n//     .attr(\"type\", \"range\")\n//     .attr(\"min\", 0)\n//     .attr(\"max\", data.length - 7)\n//     .attr(\"value\", 0)\n//     .on(\"input\", function () {\n//       var index = +this.value;\n//       var startDate = new Date(data[index].date);\n//       updateChart(startDate);\n//     });\n\n//   // Esporta la funzione di aggiornamento per poterla utilizzare nell'oggetto Vue\n//   return updateChart;\n// }","map":{"version":3,"names":[],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/TrafficPlot.js"],"sourcesContent":["// import * as d3 from 'd3';\n\n// export function createBarChart(data) {\n//   // Impostazioni del grafico\n//   var margin = { top: 20, right: 20, bottom: 30, left: 40 };\n//   var width = 800 - margin.left - margin.right;\n//   var height = 400 - margin.top - margin.bottom;\n\n//   // Creazione dello scale per gli assi\n//   var x = d3.scaleBand()\n//     .range([0, width])\n//     .padding(0.1);\n\n//   var y = d3.scaleLinear()\n//     .range([height, 0]);\n\n//   // Creazione dell'elemento SVG\n//   var svg = d3.select(\"#chart\")\n//     .attr(\"width\", width + margin.left + margin.right)\n//     .attr(\"height\", height + margin.top + margin.bottom)\n//     .append(\"g\")\n//     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//   // Funzione per aggiornare il grafico\n//   function updateChart(startDate) {\n//     // Calcola la data di fine della settimana\n//     var endDate = d3.timeDay.offset(startDate, 6);\n\n//     // Filtra i dati per la settimana selezionata\n//     var filteredData = data.filter(function (d) {\n//       var date = new Date(d.date);\n//       return date >= startDate && date <= endDate;\n//     });\n\n//     // Aggiorna il dominio degli assi\n//     var weekdays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n//     x.domain(weekdays);\n//     y.domain([0, d3.max(filteredData, function (d) { return d.travelDuration; })]);\n\n//     // Rimuovi eventuali barre precedenti\n//     svg.selectAll(\".bar\").remove();\n\n//     // Aggiungi le nuove barre\n//     svg.selectAll(\".bar\")\n//       .data(filteredData)\n//       .enter().append(\"rect\")\n//       .attr(\"class\", \"bar\")\n//       .attr(\"x\", function (d) { return x(weekdays[new Date(d.date).getDay()]); })\n//       .attr(\"width\", x.bandwidth())\n//       .attr(\"y\", function (d) { return y(d.travelDuration); })\n//       .attr(\"height\", function (d) { return height - y(d.travelDuration); });\n\n//     // Aggiorna l'asse x\n//     svg.select(\".x-axis\").call(d3.axisBottom(x));\n\n//   }\n\n//   // Inizializza il grafico con la prima settimana\n//   var initialStartDate = d3.min(data, function (d) { return new Date(d.date); });\n//   updateChart(initialStartDate);\n\n//   // Aggiungi asse x\n//   svg.append(\"g\")\n//     .attr(\"class\", \"x-axis\")\n//     .attr(\"transform\", \"translate(0,\" + height + \")\")\n//     .call(d3.axisBottom(x));\n\n//   // Aggiungi uno slider per cambiare la settimana\n//   var slider = d3.select(\"#slider\")\n//     .append(\"input\")\n//     .attr(\"type\", \"range\")\n//     .attr(\"min\", 0)\n//     .attr(\"max\", data.length - 7)\n//     .attr(\"value\", 0)\n//     .on(\"input\", function () {\n//       var index = +this.value;\n//       var startDate = new Date(data[index].date);\n//       updateChart(startDate);\n//     });\n\n//   // Esporta la funzione di aggiornamento per poterla utilizzare nell'oggetto Vue\n//   return updateChart;\n// }\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import * as d3 from 'd3';\nexport default {\n  data() {\n    return {\n      data: [],\n      selectedWeek: 0,\n      totalWeeks: 0\n    };\n  },\n  computed: {\n    weekDetails() {\n      const startDate = this.data[this.selectedWeek * 7].date;\n      const endDate = this.data[this.selectedWeek * 7 + 6].date;\n      return `${startDate} - ${endDate}`;\n    }\n  },\n  mounted() {\n    d3.csv('travelDuration.csv').then(data => {\n      this.data = data;\n      this.totalWeeks = Math.floor(data.length / 7);\n      this.drawChart();\n    });\n  },\n  methods: {\n    drawChart() {\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 40\n      };\n      const width = 600 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      const svg = d3.select(this.$refs.chart).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n      const xScale = d3.scaleBand().range([0, width]).padding(0.1).domain(this.data.slice(0, 7).map(d => d.date));\n      const yScale = d3.scaleLinear().range([height, 0]).domain([0, d3.max(this.data, d => +d.travelDuration)]);\n      svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`).call(d3.axisBottom(xScale));\n      svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(yScale));\n      svg.selectAll('.bar').data(this.data.slice(0, 7)).enter().append('rect').attr('class', 'bar').attr('x', d => xScale(d.date)).attr('y', d => yScale(+d.travelDuration)).attr('width', xScale.bandwidth()).attr('height', d => height - yScale(+d.travelDuration));\n      this.$watch('selectedWeek', () => {\n        svg.selectAll('.bar').remove();\n        const weekData = this.data.slice(this.selectedWeek * 7, this.selectedWeek * 7 + 7);\n        xScale.domain(weekData.map(d => d.date));\n        yScale.domain([0, d3.max(weekData, d => +d.travelDuration)]);\n        svg.select('.x-axis').call(d3.axisBottom(xScale));\n        svg.select('.y-axis').call(d3.axisLeft(yScale));\n        svg.selectAll('.bar').data(weekData).enter().append('rect').attr('class', 'bar').attr('x', d => xScale(d.date)).attr('y', d => yScale(+d.travelDuration)).attr('width', xScale.bandwidth()).attr('height', d => height - yScale(+d.travelDuration));\n      });\n    }\n  }\n};","map":{"version":3,"names":["d3","data","selectedWeek","totalWeeks","computed","weekDetails","startDate","date","endDate","mounted","csv","then","Math","floor","length","drawChart","methods","margin","top","right","bottom","left","width","height","svg","select","$refs","chart","append","attr","xScale","scaleBand","range","padding","domain","slice","map","d","yScale","scaleLinear","max","travelDuration","call","axisBottom","axisLeft","selectAll","enter","bandwidth","$watch","remove","weekData"],"sources":["src/components/Challenge3.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names-->\n<template>\n  <div>\n    <div ref=\"chart\"></div>\n    <input type=\"range\" v-model=\"selectedWeek\" min=\"0\" :max=\"totalWeeks - 1\">\n    <p>{{ weekDetails }}</p>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\n\nexport default {\n  data() {\n    return {\n      data: [],\n      selectedWeek: 0,\n      totalWeeks: 0,\n    };\n  },\n  computed: {\n    weekDetails() {\n      const startDate = this.data[this.selectedWeek * 7].date;\n      const endDate = this.data[this.selectedWeek * 7 + 6].date;\n      return `${startDate} - ${endDate}`;\n    },\n  },\n  mounted() {\n    d3.csv('travelDuration.csv').then((data) => {\n      this.data = data;\n      this.totalWeeks = Math.floor(data.length / 7);\n      this.drawChart();\n    });\n  },\n  methods: {\n    drawChart() {\n      const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n      const width = 600 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      const svg = d3\n        .select(this.$refs.chart)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      const xScale = d3\n        .scaleBand()\n        .range([0, width])\n        .padding(0.1)\n        .domain(this.data.slice(0, 7).map((d) => d.date));\n\n      const yScale = d3\n        .scaleLinear()\n        .range([height, 0])\n        .domain([0, d3.max(this.data, (d) => +d.travelDuration)]);\n\n      svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(xScale));\n\n      svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(yScale));\n\n      svg\n        .selectAll('.bar')\n        .data(this.data.slice(0, 7))\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('x', (d) => xScale(d.date))\n        .attr('y', (d) => yScale(+d.travelDuration))\n        .attr('width', xScale.bandwidth())\n        .attr('height', (d) => height - yScale(+d.travelDuration));\n\n      this.$watch('selectedWeek', () => {\n        svg.selectAll('.bar').remove();\n\n        const weekData = this.data.slice(\n          this.selectedWeek * 7,\n          this.selectedWeek * 7 + 7\n        );\n\n        xScale.domain(weekData.map((d) => d.date));\n        yScale.domain([0, d3.max(weekData, (d) => +d.travelDuration)]);\n\n        svg.select('.x-axis').call(d3.axisBottom(xScale));\n        svg.select('.y-axis').call(d3.axisLeft(yScale));\n\n        svg\n          .selectAll('.bar')\n          .data(weekData)\n          .enter()\n          .append('rect')\n          .attr('class', 'bar')\n          .attr('x', (d) => xScale(d.date))\n          .attr('y', (d) => yScale(+d.travelDuration))\n          .attr('width', xScale.bandwidth())\n          .attr('height', (d) => height - yScale(+d.travelDuration));\n      });\n    },\n  },\n};\n</script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- eslint-disable vue/multi-word-component-names\n<template>\n  <div id=\"vc3\" class=\"vc3-container\">\n    <h1 class=\"vc3Title\">Challenge 3: Economics</h1>\n    <p>\n      Considers the financial health of the city. Over time, are businesses growing or shrinking? How are people changing jobs? Are standards of living improving or declining over time?\n    </p>\n\n    <button class=\"accordion3\" @click=\"toggleAccordion(1)\">\n      Over the period covered by the dataset, which businesses appear to be more prosperous? Which appear to be struggling?\n    </button>\n    <div class=\"panel\" :style=\"{ maxHeight: panels[1].maxHeight }\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-8\">\n          <div class=\"button-container\">\n            <button :class=\"{ active: pubsActive }\" @click=\"togglePubs\" class=\"pubsButton\">Pubs</button>\n            <br>\n            <button :class=\"{ active: restaurantsActive }\" @click=\"toggleRestaurants\" class=\"restButton\">Restaurants</button>\n          </div>\n        </div>\n      </div>\n      <svg width=\"100%\" height=\"700px\" ref=\"map\">\n        <g class=\"buildings\"></g>\n        <g class=\"apartments\"></g>\n        <g class=\"pubs\" :opacity=\"pubsActive ? 1 : 0\"></g>\n        <g class=\"restaurants\" :opacity=\"restaurantsActive ? 1 : 0\"></g>\n        <g class=\"pubs hidden\"></g>\n        <g class=\"restaurants hidden\"></g>\n      </svg>\n    </div>\n\n    <button class=\"accordion3\" @click=\"toggleAccordion(2)\">\n      How does the financial health of the residents change over the period covered by the dataset? How do wages compare to the overall cost of living in Engagement? Are there groups that appear to exhibit similar patterns?\n    </button>\n    <div class=\"panel\" :style=\"{ maxHeight: panels[2].maxHeight }\">\n      <div id=\"bar-chart\"></div>  \n    </div>\n\n    <button class=\"accordion3\" @click=\"toggleAccordion(3)\">\n      Describe the health of the various employers within the city limits. What employment patterns do you observe? Do you notice any areas of particularly high or low turnover?\n    </button>\n    <div class=\"panel\" :style=\"{ maxHeight: panels[3].maxHeight }\">\n      <p>contenuto</p>\n    </div>\n\n    <vue-slider v-model=\"currentWeekIndex\" :min=\"0\" :max=\"totalWeeks - 1\" :tooltip-formatter=\"formatWeekLabel\" />\n    <div ref=\"chartContainer\"></div>\n  </div>\n</template>\n\n<script>\nimport { getSingleEndpoint } from \"../assets/apiConnector\";\nconst wkx = require('wkx');\nconst d3 = require('d3');\n\nimport { BuildingMap, BuildingApt, BuildingPub, BuildingRestaurant } from \"@/assets/BusinessStatus\";\nimport { createBarChart } from \"@/assets/CitizenPurchase\";\n\nconst bm = new BuildingMap();\nconst apt = new BuildingApt();\nconst pub = new BuildingPub();\nconst rest = new BuildingRestaurant();\n\nexport default {\n  name: 'App',\n  components: {},\n  data() {\n    return {\n      panels: {\n        1: { active: false, maxHeight: null },\n        2: { active: false, maxHeight: null },\n        3: { active: false, maxHeight: null },\n        4: { active: false, maxHeight: null },\n      },\n      buildings: [],\n      apartments: [],\n      pubs: [],\n      restaurants: [],\n      pubsActive: false,\n      restaurantsActive: false,\n      FinancialJournal: [],\n    }\n  },\n  mounted() {\n    // DRAW THE MAP\n    getSingleEndpoint({}, 'Buildings').then((response) => {\n      this.buildings = response.data.map(d => ({\n        type: \"Feature\",\n        geometry: wkx.Geometry.parse(Buffer.from(d.location, 'hex')).toGeoJSON(),\n        properties: {\n          buildingId: d.buildingId,\n          buildingType: d.buildingType,\n          maxOccupancy: d.maxOccupancy,\n          units: d.units,\n        },\n      }));\n\n      // DRAW APARTMENTS\n      getSingleEndpoint({}, 'Apartments').then((response) => {\n        this.apartments = response.data.map(d => ({\n          type: \"Feature\",\n          geometry: wkx.Geometry.parse(Buffer.from(d.location, 'hex')).toGeoJSON(),\n          properties: {\n            numberOfRooms: d.numberOfRooms,\n            apartmentId: d.apartmentId,\n            buildingId: d.buildingId,\n            rentalCost: d.rentalCost,\n            maxOccupancy: d.maxOccupancy,\n          },\n        }));\n        this.drawApt();\n      });\n\n      // DRAW PUBS\n      getSingleEndpoint({}, 'Pubs').then((response) => {\n        this.pubs = response.data.map(d => ({\n          type: \"Feature\",\n          geometry: wkx.Geometry.parse(Buffer.from(d.location, 'hex')).toGeoJSON(),\n          properties: {\n            pubId: d.pubId,\n            hourlyCost: d.hourlyCost,\n            maxOccupancy: d.maxOccupancy,\n            buildingId: d.buildingId,\n          },\n        }));\n        this.drawPub();\n      });\n\n      // DRAW RESTAURANTS\n      getSingleEndpoint({}, 'Restaurants').then((response) => {\n        this.restaurants = response.data.map(d => ({\n          type: \"Feature\",\n          geometry: wkx.Geometry.parse(Buffer.from(d.location, 'hex')).toGeoJSON(),\n          properties: {\n            restaurantId: d.restaurantId,\n            maxOccupancy: d.maxOccupancy,\n            foodCost: d.foodCost,\n            buildingId: d.buildingId,\n          },\n        }));\n        this.drawRestaurants();\n      });\n      this.drawBuildings();\n    });\n\n    getSingleEndpoint({ participantId: 2 }, 'FinancialJournal').then((response) => {\n      this.FinancialJournal = response.data.map(d => ({\n        type: \"Feature\",\n        properties: {\n          amount: d.amount,\n          category: d.category,\n          timestamp: d.timestamp,\n          id: d.id,\n        },\n      }));\n\n      // Rimuovi la selezione delle barre precedenti\n      d3.select(\"#bar-chart\").selectAll(\".bar\").remove();\n      createBarChart(this.FinancialJournal);\n    });\n  },\n  methods: {\n    toggleAccordion(section) {\n      this.panels[section].active = !this.panels[section].active;\n      if (this.panels[section].active) {\n        this.panels[section].maxHeight = \"none\";\n      } else {\n        this.panels[section].maxHeight = null;\n      }\n    },\n\n    drawBuildings() {\n      d3.select(this.$refs.map)\n        .select('g.buildings')\n        .datum(this.buildings)\n        .call(bm);\n    },\n    drawApt() {\n      d3.select(this.$refs.map)\n        .select('g.apartments')\n        .datum(this.apartments)\n        .call(apt, bm.extent());\n    },\n    drawPub() {\n      d3.select(this.$refs.map)\n        .select('g.pubs')\n        .datum(this.pubs)\n        .call(pub, bm.extent());\n    },\n    drawRestaurants() {\n      d3.select(this.$refs.map)\n        .select('g.restaurants')\n        .datum(this.restaurants)\n        .call(rest, bm.extent());\n    },\n    togglePubs() {\n      this.pubsActive = !this.pubsActive;\n    },\n    toggleRestaurants() {\n      this.restaurantsActive = !this.restaurantsActive;\n    },\n  }\n}\n</script>\n\n<style>\n#vc3 {\n  position: relative;\n}\n\n.vc3Title {\n  color: #FB8500;\n}\n\n.accordion3 {\n  background-color: #eee;\n  color: #444;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  border: none;\n  text-align: left;\n  outline: none;\n  font-size: 15px;\n  text-align: justify;\n  transition: 0.4s;\n  margin-bottom: 20px;\n  border-radius: 20px;\n}\n\n.active,\n.accordion3:hover {\n  background-color: #FB8500;\n  color: white;\n}\n\n.panel {\n  padding: 0 18px;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n}\n\n#map {\n  margin-top: 50px;\n  position: relative;\n}\n\nsvg g.buildings {\n  fill-opacity: 0.3;\n  stroke: grey;\n}\n\n.tooltip {\n  position: absolute;\n  padding: 6px;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  font-weight: bold;\n}\n\n.button-container {\n  position: absolute;\n  top: 10px;\n  right: 30px;\n}\n\n.button-container button {\n  margin-left: 10px;\n  background-color: transparent;\n  border: none;\n  border-radius: 20px;\n  padding: 10px 20px;\n  transition: background-color 0.3s ease;\n  opacity: 0.3;\n}\n\n.button-container .pubsButton {\n  background-color: #0051ba;\n}\n\n.button-container .restButton {\n  background-color: #ff06fa;\n}\n\n.button-container .active {\n  opacity: 1;\n}\n\n.button-container .hidden {\n  display: none;\n}\n</style> -->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
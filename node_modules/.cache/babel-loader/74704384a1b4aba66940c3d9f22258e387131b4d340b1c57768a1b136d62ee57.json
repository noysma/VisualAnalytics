{"ast":null,"code":"import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n  let extent;\n  function me(selection) {\n    const buildingTypes = d3.groups(selection.datum().map(d => d.properties.buildingType), d => d).map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n    color.domain(buildingTypes);\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const path = d3.geoPath().projection(projection);\n    selection.selectAll(\"path\").data(selection.datum()).join(\"path\").attr(\"d\", path).attr(\"fill\", d => color(d.properties.buildingType));\n  }\n  me.color = function () {\n    return color;\n  };\n  me.extent = function () {\n    return extent;\n  };\n  return me;\n}\n\n// A P A R T M E N T S\nfunction BuildingApt() {\n  function me(selection, extent) {\n    const apartmentIds = d3.groups(selection.datum().map(d => d.properties.apartmentId), d => d).map(d => d[0]);\n    console.log(\"apartmentIds\", apartmentIds);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    selection.selectAll(\".apt\").data(selection.datum()).join(\"circle\").attr(\"class\", \"apt\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 1.2); // radius value\n  }\n\n  return me;\n}\n\n// P U B S\nfunction BuildingPub() {\n  const color = '#0700C5';\n  function me(selection, extent) {\n    const pubIds = d3.groups(selection.datum().map(d => d.properties.pubId), d => d).map(d => d[0]);\n    console.log(\"pubIds\", pubIds);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    selection.selectAll(\".pub\").data(selection.datum()).join(\"circle\").attr(\"class\", \"pub\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 4.5) // radius value\n    .attr(\"fill\", color).attr(\"fill-opacity\", 0.6);\n  }\n  return me;\n}\n\n// R E S T A U R A N T S\nfunction BuildingRestaurant() {\n  const color = '#FF06FA';\n  function me(selection, extent) {\n    const restaurantId = d3.groups(selection.datum().map(d => d.properties.restaurantId), d => d).map(d => d[0]);\n    console.log(\"restaurantId\", restaurantId);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    selection.selectAll(\".restaurant\").data(selection.datum()).join(\"circle\").attr(\"class\", \"restaurant\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 4.5) // radius value\n    .attr(\"fill\", color).attr(\"fill-opacity\", 0.6);\n  }\n  return me;\n}\n\n// L E G E N D\nfunction BuildingTypeLegend() {\n  let color = d3.scaleOrdinal(d3.schemeCategory10);\n  function me(selection) {\n    const legend = selection.append(\"g\").attr(\"transform\", \"translate(20, 450)\");\n    const legendItem = legend.selectAll(\"g\").data(color.domain()).join(\"g\").attr(\"transform\", (d, i) => `translate(0, ${i * 20})`);\n    legendItem.filter(d => d === \"apartments\") // Filter only \"apartments\" category\n    .append(\"circle\") // Use circle for \"apartments\"\n    .attr(\"r\", 5).attr(\"cx\", 5).attr(\"cy\", 5).attr(\"fill\", \"black\");\n    legendItem.append(\"rect\") // Use rectangle for other categories\n    .attr(\"width\", 10).attr(\"height\", 10).attr(\"fill-opacity\", 0.4).attr(\"fill\", d => d === \"apartments\" ? \"none\" : color(d));\n    legendItem.append(\"text\").attr(\"x\", 20).attr(\"y\", 10).text(d => {\n      if (d === \"apartments\") {\n        return \"Apartments\"; // Capitalize the first letter for \"apartments\"\n      } else {\n        return d; // Keep the original label for other categories\n      }\n    });\n  }\n\n  me.color = function (_) {\n    if (!arguments.length) return color;\n    color = _;\n    return me;\n  };\n  return me;\n}\nexport { BuildingMap, BuildingTypeLegend, BuildingApt, BuildingPub, BuildingRestaurant };","map":{"version":3,"names":["d3","BuildingMap","color","scaleOrdinal","schemeCategory10","extent","me","selection","buildingTypes","groups","datum","map","d","properties","buildingType","console","log","domain","type","geometries","geometry","projection","geoIdentity","reflectY","fitSize","path","geoPath","selectAll","data","join","attr","BuildingApt","apartmentIds","apartmentId","coordinates","BuildingPub","pubIds","pubId","BuildingRestaurant","restaurantId","BuildingTypeLegend","legend","append","legendItem","i","filter","text","_","arguments","length"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/Map.js"],"sourcesContent":["import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n  let extent;\n\n  function me(selection) {\n    const buildingTypes = d3\n      .groups(selection.datum().map(d => d.properties.buildingType), d => d)\n      .map(d => d[0]);\n\n    console.log(\"buildingTypes\", buildingTypes);\n    color.domain(buildingTypes);\n\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const path = d3.geoPath().projection(projection);\n\n    selection\n      .selectAll(\"path\")\n      .data(selection.datum())\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", d => color(d.properties.buildingType));\n  }\n\n  me.color = function () {\n    return color;\n  };\n\n  me.extent = function() {\n    return extent\n  };\n\n  return me;\n}\n\n// A P A R T M E N T S\nfunction BuildingApt() {\n  function me(selection, extent) {\n    const apartmentIds = d3\n      .groups(selection.datum().map(d => d.properties.apartmentId), d => d)\n      .map(d => d[0]);\n\n    console.log(\"apartmentIds\", apartmentIds);\n    \n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n    \n    selection\n      .selectAll(\".apt\")\n      .data(selection.datum())\n      .join(\"circle\")\n      .attr(\"class\", \"apt\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n\n      .attr(\"r\", 1.2); // radius value\n  }\n\n  return me;\n}\n\n// P U B S\nfunction BuildingPub() {\n  const color = '#0700C5';\n  \n  function me(selection, extent) {\n    const pubIds = d3\n      .groups(selection.datum().map(d => d.properties.pubId), d => d)\n      .map(d => d[0]);\n\n    console.log(\"pubIds\", pubIds);\n    \n    const projection = d3\n    .geoIdentity()\n    .reflectY(true)\n    .fitSize([650, 650], extent);\n    \n    selection\n      .selectAll(\".pub\")\n      .data(selection.datum())\n      .join(\"circle\")\n      .attr(\"class\", \"pub\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 4.5) // radius value\n      .attr(\"fill\", color)\n      .attr(\"fill-opacity\", 0.6);\n  }\n \n  return me;\n}\n\n// R E S T A U R A N T S\nfunction BuildingRestaurant() {\n  const color = '#FF06FA';\n  \n  function me(selection, extent) {\n    const restaurantId = d3\n      .groups(selection.datum().map(d => d.properties.restaurantId), d => d)\n      .map(d => d[0]);\n\n    console.log(\"restaurantId\", restaurantId);\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    selection\n      .selectAll(\".restaurant\")\n      .data(selection.datum())\n      .join(\"circle\")\n      .attr(\"class\", \"restaurant\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 4.5) // radius value\n      .attr(\"fill\", color)\n      .attr(\"fill-opacity\", 0.6);\n  }\n\n  return me;\n}\n\n// L E G E N D\nfunction BuildingTypeLegend() {\n  let color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  function me(selection) {\n    const legend = selection.append(\"g\").attr(\"transform\", \"translate(20, 450)\");\n\n    const legendItem = legend\n      .selectAll(\"g\")\n      .data(color.domain())\n      .join(\"g\")\n      .attr(\"transform\", (d, i) => `translate(0, ${i * 20})`);\n\n    legendItem\n      .filter(d => d === \"apartments\") // Filter only \"apartments\" category\n      .append(\"circle\") // Use circle for \"apartments\"\n      .attr(\"r\", 5)\n      .attr(\"cx\", 5)\n      .attr(\"cy\", 5)\n      .attr(\"fill\", \"black\");\n\n    legendItem\n      .append(\"rect\") // Use rectangle for other categories\n      .attr(\"width\", 10)\n      .attr(\"height\", 10)\n      .attr(\"fill-opacity\", 0.4)\n      .attr(\"fill\", d => (d === \"apartments\" ? \"none\" : color(d)));\n\n    legendItem\n      .append(\"text\")\n      .attr(\"x\", 20)\n      .attr(\"y\", 10)\n      .text(d => {\n        if (d === \"apartments\") {\n          return \"Apartments\"; // Capitalize the first letter for \"apartments\"\n        } else {\n          return d; // Keep the original label for other categories\n        }\n      });\n  }\n  me.color = function (_) {\n    if (!arguments.length) return color;\n    color = _;\n    return me;\n  };\n\n  return me;\n}\n\nexport { BuildingMap, BuildingTypeLegend, BuildingApt, BuildingPub, BuildingRestaurant };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as d3 from 'd3';\nexport function drawFinancialChart(data) {\n  const margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 50\n  };\n  const width = 600 - margin.left - margin.right;\n  const height = 400 - margin.top - margin.bottom;\n  const parseDate = d3.timeParse('%Y-%m');\n  const x = d3.scaleTime().range([0, width]);\n  const y = d3.scaleLinear().range([height, 0]);\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n  const xAxis = d3.axisBottom(x);\n  const yAxis = d3.axisLeft(y);\n  const line = d3.line().x(d => x(d.date)).y(d => y(d.availableBalance));\n  const svg = d3.select('#line-chart').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n  const processedData = data.map(d => ({\n    date: parseDate(d.monthYear),\n    educationLevel: d.educationLevel,\n    availableBalance: +d.availableBalance\n  }));\n  const educationLevels = Array.from(new Set(processedData.map(d => d.educationLevel)));\n  color.domain(educationLevels);\n  const lines = color.domain().map(level => ({\n    level,\n    values: processedData.filter(d => d.educationLevel === level)\n  }));\n  x.domain(d3.extent(processedData, d => d.date));\n  y.domain([d3.min(processedData, d => d.availableBalance), d3.max(processedData, d => d.availableBalance)]);\n  svg.append('g').attr('class', 'x axis').attr('transform', `translate(0, ${height})`).call(xAxis);\n  svg.append('g').attr('class', 'y axis').call(yAxis).append('text').attr('transform', 'rotate(-90)').attr('y', 6).attr('dy', '.71em').style('text-anchor', 'end').text('Available Balance');\n  const lineGroup = svg.selectAll('.line-group').data(lines).enter().append('g').attr('class', 'line-group');\n  lineGroup.append('path').attr('class', 'line').attr('d', d => line(d.values)).style('stroke', d => color(d.level));\n  svg.selectAll('.dot').data(processedData).enter().append('circle').attr('class', 'dot').attr('cx', d => x(d.date)).attr('cy', d => y(d.availableBalance)).attr('r', 5).style('fill', d => color(d.educationLevel)).on('mouseover', function (d) {\n    const tooltip = d3.select('#tooltip');\n    const [x, y] = d3.mouse(d3.select(this).node());\n    tooltip.style('left', `${x}px`).style('top', `${y}px`).style('opacity', 1).html(`Available Balance: ${d.availableBalance}`);\n  }).on('mouseout', () => {\n    const tooltip = d3.select('#tooltip');\n    tooltip.style('opacity', 0);\n  });\n}","map":{"version":3,"names":["d3","drawFinancialChart","data","margin","top","right","bottom","left","width","height","parseDate","timeParse","x","scaleTime","range","y","scaleLinear","color","scaleOrdinal","schemeCategory10","xAxis","axisBottom","yAxis","axisLeft","line","d","date","availableBalance","svg","select","append","attr","processedData","map","monthYear","educationLevel","educationLevels","Array","from","Set","domain","lines","level","values","filter","extent","min","max","call","style","text","lineGroup","selectAll","enter","on","tooltip","mouse","node","html"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/FinancialHealth.js"],"sourcesContent":["import * as d3 from 'd3';\n\nexport function drawFinancialChart(data) {\n  const margin = { top: 20, right: 20, bottom: 30, left: 50 };\n  const width = 600 - margin.left - margin.right;\n  const height = 400 - margin.top - margin.bottom;\n\n  const parseDate = d3.timeParse('%Y-%m');\n\n  const x = d3.scaleTime().range([0, width]);\n  const y = d3.scaleLinear().range([height, 0]);\n\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  const xAxis = d3.axisBottom(x);\n  const yAxis = d3.axisLeft(y);\n\n  const line = d3\n    .line()\n    .x(d => x(d.date))\n    .y(d => y(d.availableBalance));\n\n  const svg = d3\n    .select('#line-chart')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n  const processedData = data.map(d => ({\n    date: parseDate(d.monthYear),\n    educationLevel: d.educationLevel,\n    availableBalance: +d.availableBalance,\n  }));\n\n  const educationLevels = Array.from(\n    new Set(processedData.map(d => d.educationLevel))\n  );\n\n  color.domain(educationLevels);\n\n  const lines = color.domain().map(level => ({\n    level,\n    values: processedData.filter(d => d.educationLevel === level),\n  }));\n\n  x.domain(d3.extent(processedData, d => d.date));\n  y.domain([\n    d3.min(processedData, d => d.availableBalance),\n    d3.max(processedData, d => d.availableBalance),\n  ]);\n\n  svg\n    .append('g')\n    .attr('class', 'x axis')\n    .attr('transform', `translate(0, ${height})`)\n    .call(xAxis);\n\n  svg\n    .append('g')\n    .attr('class', 'y axis')\n    .call(yAxis)\n    .append('text')\n    .attr('transform', 'rotate(-90)')\n    .attr('y', 6)\n    .attr('dy', '.71em')\n    .style('text-anchor', 'end')\n    .text('Available Balance');\n\n  const lineGroup = svg\n    .selectAll('.line-group')\n    .data(lines)\n    .enter()\n    .append('g')\n    .attr('class', 'line-group');\n\n  lineGroup\n    .append('path')\n    .attr('class', 'line')\n    .attr('d', d => line(d.values))\n    .style('stroke', d => color(d.level));\n\n    svg\n    .selectAll('.dot')\n    .data(processedData)\n    .enter()\n    .append('circle')\n    .attr('class', 'dot')\n    .attr('cx', d => x(d.date))\n    .attr('cy', d => y(d.availableBalance))\n    .attr('r', 5)\n    .style('fill', d => color(d.educationLevel))\n    .on('mouseover', function (d) {\n      const tooltip = d3.select('#tooltip');\n  \n      const [x, y] = d3.mouse(d3.select(this).node());\n  \n      tooltip\n        .style('left', `${x}px`)\n        .style('top', `${y}px`)\n        .style('opacity', 1)\n        .html(`Available Balance: ${d.availableBalance}`);\n    })\n    .on('mouseout', () => {\n      const tooltip = d3.select('#tooltip');\n      tooltip.style('opacity', 0);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n  function me(selection) {\n    const buildingTypes = d3.groups(selection.datum().map(d => d.properties.buildingType), d => d).map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const path = d3.geoPath().projection(projection);\n    selection.selectAll(\"path\").data(selection.datum()).join(\"path\").attr(\"d\", path).attr(\"fill\", color).style(\"stroke\", \"grey\");\n  }\n  me.color = function () {\n    return color;\n  };\n  me.extent = function () {\n    return extent;\n  };\n  return me;\n}\nfunction BuildingPub() {\n  const colorScale = d3.scaleThreshold().domain([8, 10, 12]).range([\"#f1f1f1\", \"#a6bddb\", \"#2b8cbe\", \"#045a8d\"]);\n  function me(selection, extent) {\n    const pubIds = d3.groups(selection.datum().map(d => d.properties.location), d => d).map(d => d[0]);\n    console.log(\"pubIds\", pubIds);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\").attr(\"width\", 400).attr(\"height\", 50);\n\n    // Crea un array con i range di valori e i colori corrispondenti per la legenda\n    const legendData = [{\n      range: \"< 8\",\n      color: \"#f1f1f1\"\n    }, {\n      range: \"8 - 9.99\",\n      color: \"#a6bddb\"\n    }, {\n      range: \"10 - 12\",\n      color: \"#2b8cbe\"\n    }, {\n      range: \"> 12\",\n      color: \"#045a8d\"\n    }];\n\n    // Calcola la larghezza totale della legenda\n    const totalLegendWidth = legendData.reduce((sum, d) => sum + getTextWidth(d.range, \"legend-label\") + 40, 0);\n\n    // Calcola la posizione x di ogni elemento della legenda in base alla larghezza totale\n    const legendItemPositions = [];\n    let currentX = (legendSvg.attr(\"width\") - totalLegendWidth) / 2;\n    legendData.forEach(d => {\n      legendItemPositions.push(currentX);\n      currentX += getTextWidth(d.range, \"legend-label\") + 40;\n    });\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\").data(legendData).enter().append(\"rect\").attr(\"class\", \"legend-rect\").attr(\"x\", (d, i) => legendItemPositions[i]).attr(\"y\", 10).attr(\"width\", (d, i) => getTextWidth(d.range, \"legend-label\") + 20).attr(\"height\", 20).attr(\"fill\", d => d.color);\n\n    // Aggiungi le etichette per i range di valori corrispondenti nella legenda\n    legendSvg.selectAll(\".legend-label\").data(legendData).enter().append(\"text\").attr(\"class\", \"legend-label\").attr(\"x\", (d, i) => legendItemPositions[i] + getTextWidth(d.range, \"legend-label\") / 2 + 10).attr(\"y\", 45).text(d => d.range).attr(\"text-anchor\", \"middle\");\n    selection.selectAll(\".pub\").data(selection.datum()).join(\"circle\").attr(\"class\", \"pub\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => {\n      const hourlyCost = d.properties.hourlyCost;\n      if (hourlyCost < 8) {\n        return colorScale(0);\n      } else if (hourlyCost >= 8 && hourlyCost < 10) {\n        return colorScale(8);\n      } else if (hourlyCost >= 10 && hourlyCost <= 12) {\n        return colorScale(10);\n      } else {\n        return colorScale(12);\n      }\n    }).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const hourlyCost = d.properties.hourlyCost;\n      tooltip.style(\"opacity\", 1).html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\n\n// Funzione di utilitÃ  per calcolare la larghezza del testo\nfunction getTextWidth(text, className) {\n  const container = d3.select(\"body\").append(\"div\").attr(\"class\", className).text(text);\n  const width = container.node().getBoundingClientRect().width;\n  container.remove();\n  return width;\n}\nfunction BuildingRestaurant() {\n  const colorScale = d3.scaleDiverging(d3.interpolateReds);\n  function me(selection, extent) {\n    const restaurantData = selection.datum();\n    const restaurantId = d3.groups(restaurantData, d => d.properties.restaurantId).map(d => ({\n      restaurantId: d[0],\n      totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n    }));\n    console.log(\"restaurantData\", restaurantData);\n    console.log(\"restaurantId\", restaurantId);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n    colorScale.domain(foodCostExtent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n    selection.selectAll(\".restaurant\").data(restaurantData).join(\"circle\").attr(\"class\", \"restaurant\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => colorScale(d.properties.foodCost)).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const foodCost = d.properties.foodCost;\n      tooltip.style(\"opacity\", 1).html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\nexport { BuildingMap, BuildingPub, BuildingRestaurant };","map":{"version":3,"names":["d3","BuildingMap","color","extent","me","selection","buildingTypes","groups","datum","map","d","properties","buildingType","console","log","type","geometries","geometry","projection","geoIdentity","reflectY","fitSize","path","geoPath","selectAll","data","join","attr","style","BuildingPub","colorScale","scaleThreshold","domain","range","pubIds","location","tooltip","select","append","legendSvg","legendData","totalLegendWidth","reduce","sum","getTextWidth","legendItemPositions","currentX","forEach","push","enter","i","text","coordinates","hourlyCost","on","event","html","format","pageX","pageY","className","container","width","node","getBoundingClientRect","remove","BuildingRestaurant","scaleDiverging","interpolateReds","restaurantData","restaurantId","totalFoodCost","foodCost","foodCostExtent"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/BusinessStatus.js"],"sourcesContent":["import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n\n  function me(selection) {\n    const buildingTypes = d3\n      .groups(selection.datum().map(d => d.properties.buildingType), d => d)\n      .map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const path = d3.geoPath().projection(projection);\n\n    selection\n      .selectAll(\"path\")\n      .data(selection.datum())\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", color)\n      .style(\"stroke\", \"grey\");\n  }\n\n  me.color = function () {\n    return color;\n  };\n\n  me.extent = function() {\n    return extent\n  };\n\n  return me;\n}\n\nfunction BuildingPub() {\n  const colorScale = d3.scaleThreshold()\n    .domain([8, 10, 12])\n    .range([\"#f1f1f1\", \"#a6bddb\", \"#2b8cbe\", \"#045a8d\"]);\n\n  function me(selection, extent) {\n    const pubIds = d3\n      .groups(selection.datum().map(d => d.properties.location), d => d)\n      .map(d => d[0]);\n\n    console.log(\"pubIds\", pubIds);\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\")\n      .attr(\"width\", 400)\n      .attr(\"height\", 50);\n\n    // Crea un array con i range di valori e i colori corrispondenti per la legenda\n    const legendData = [\n      { range: \"< 8\", color: \"#f1f1f1\" },\n      { range: \"8 - 9.99\", color: \"#a6bddb\" },\n      { range: \"10 - 12\", color: \"#2b8cbe\" },\n      { range: \"> 12\", color: \"#045a8d\" }\n    ];\n\n    // Calcola la larghezza totale della legenda\n    const totalLegendWidth = legendData.reduce((sum, d) => sum + getTextWidth(d.range, \"legend-label\") + 40, 0);\n\n    // Calcola la posizione x di ogni elemento della legenda in base alla larghezza totale\n    const legendItemPositions = [];\n    let currentX = (legendSvg.attr(\"width\") - totalLegendWidth) / 2;\n    legendData.forEach(d => {\n      legendItemPositions.push(currentX);\n      currentX += getTextWidth(d.range, \"legend-label\") + 40;\n    });\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\")\n      .data(legendData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"legend-rect\")\n      .attr(\"x\", (d, i) => legendItemPositions[i])\n      .attr(\"y\", 10)\n      .attr(\"width\", (d, i) => getTextWidth(d.range, \"legend-label\") + 20)\n      .attr(\"height\", 20)\n      .attr(\"fill\", d => d.color);\n\n    // Aggiungi le etichette per i range di valori corrispondenti nella legenda\n    legendSvg.selectAll(\".legend-label\")\n      .data(legendData)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"legend-label\")\n      .attr(\"x\", (d, i) => legendItemPositions[i] + getTextWidth(d.range, \"legend-label\") / 2 + 10)\n      .attr(\"y\", 45)\n      .text(d => d.range)\n      .attr(\"text-anchor\", \"middle\");\n\n    selection\n      .selectAll(\".pub\")\n      .data(selection.datum())\n      .join(\"circle\")\n      .attr(\"class\", \"pub\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 10)\n      .attr(\"fill\", d => {\n        const hourlyCost = d.properties.hourlyCost;\n        if (hourlyCost < 8) {\n          return colorScale(0);\n        } else if (hourlyCost >= 8 && hourlyCost < 10) {\n          return colorScale(8);\n        } else if (hourlyCost >= 10 && hourlyCost <= 12) {\n          return colorScale(10);\n        } else {\n          return colorScale(12);\n        }\n      })\n      .style(\"stroke\", \"black\")\n      .on(\"mouseover\", (event, d) => {\n        const hourlyCost = d.properties.hourlyCost;\n        tooltip\n          .style(\"opacity\", 1)\n          .html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`)\n          .style(\"left\", event.pageX + \"px\")\n          .style(\"top\", event.pageY + \"px\");\n      })\n      .on(\"mouseout\", () => {\n        tooltip.style(\"opacity\", 0);\n      });\n  }\n\n  return me;\n}\n\n// Funzione di utilitÃ  per calcolare la larghezza del testo\nfunction getTextWidth(text, className) {\n  const container = d3.select(\"body\").append(\"div\").attr(\"class\", className).text(text);\n  const width = container.node().getBoundingClientRect().width;\n  container.remove();\n  return width;\n}\n\n\n\n\n\n\n\nfunction BuildingRestaurant() {\n  const colorScale = d3.scaleDiverging(d3.interpolateReds);\n\n  function me(selection, extent) {\n    const restaurantData = selection.datum();\n\n    const restaurantId = d3\n      .groups(restaurantData, d => d.properties.restaurantId)\n      .map(d => ({\n        restaurantId: d[0],\n        totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n      }));\n\n    console.log(\"restaurantData\", restaurantData);\n    console.log(\"restaurantId\", restaurantId);\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n    colorScale.domain(foodCostExtent);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    selection\n      .selectAll(\".restaurant\")\n      .data(restaurantData)\n      .join(\"circle\")\n      .attr(\"class\", \"restaurant\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 10)\n      .attr(\"fill\", d => colorScale(d.properties.foodCost))\n      .style(\"stroke\", \"black\")\n      .on(\"mouseover\", (event, d) => {\n        const foodCost = d.properties.foodCost;\n        tooltip\n          .style(\"opacity\", 1)\n          .html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`)\n          .style(\"left\", event.pageX + \"px\")\n          .style(\"top\", event.pageY + \"px\");\n      })\n      .on(\"mouseout\", () => {\n        tooltip.style(\"opacity\", 0);\n      });\n  }\n\n  return me;\n}\n\nexport { BuildingMap, BuildingPub, BuildingRestaurant };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
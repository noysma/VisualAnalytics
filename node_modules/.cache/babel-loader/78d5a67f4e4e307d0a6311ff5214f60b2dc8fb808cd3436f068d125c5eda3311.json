{"ast":null,"code":"import { getSingleEndpoint } from \"@/assets/api_connector\";\nlet Buffer = require('buffer/').Buffer;\nconst wkx = require('wkx');\nconst d3 = require('d3');\nimport { BuildingMap, BuildingTypeLegend } from \"@/assets/BuildingMap\";\nconst bm = new BuildingMap();\nconst bl = new BuildingTypeLegend();\nexport default {\n  name: 'App',\n  components: {},\n  data() {\n    return {\n      buildings: []\n    };\n  },\n  mounted() {\n    getSingleEndpoint({}, 'Buildings').then(response => {\n      this.buildings = response.data.map(d => ({\n        type: \"Feature\",\n        geometry: wkx.Geometry.parse(Buffer.from(d.location, 'hex')).toGeoJSON(),\n        properties: {\n          buildingId: d.buildingId,\n          buildingType: d.buildingType,\n          maxOccupancy: d.maxOccupancy,\n          units: d.units\n        }\n      }));\n      this.drawBuildings();\n    });\n  },\n  methods: {\n    drawBuildings() {\n      const buildings = d3.select(this.$refs.map).select('g.buildings').datum(this.buildings).selectAll('rect').data(d => d).join('rect').attr('x', d => this.xScale(d.x)).attr('y', d => this.yScale(d.y) - this.yScale(d.height)).attr('width', d => this.xScale(d.width)).attr('height', d => this.yScale(d.height)).attr('fill', d => this.colorScale(d.color)).on('mouseover', (event, d) => {\n        d3.select('#tooltip').style('display', 'block').style('top', event.pageY + 'px').style('left', event.pageX + 'px').text(d.name);\n      }).on('mouseout', () => {\n        d3.select('#tooltip').style('display', 'none');\n      }).on('click', (event, d) => {\n        d3.select('#details').style('display', 'block').style('top', event.pageY + 'px').style('left', event.pageX + 'px').text(d.name + ': ' + d.maxOccupancy);\n      });\n    }\n  }\n};","map":{"version":3,"names":["getSingleEndpoint","Buffer","require","wkx","d3","BuildingMap","BuildingTypeLegend","bm","bl","name","components","data","buildings","mounted","then","response","map","d","type","geometry","Geometry","parse","from","location","toGeoJSON","properties","buildingId","buildingType","maxOccupancy","units","drawBuildings","methods","select","$refs","datum","selectAll","join","attr","xScale","x","yScale","y","height","width","colorScale","color","on","event","style","pageY","pageX","text"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <b-container id=\"app\">\n    <b-row>\n      <b-col>\n        <div id=\"map\">\n            <svg width=\"100%\" height=\"700px\" ref=\"map\">\n                <g class=\"buildings\"></g>\n                <g class=\"legend\"></g>\n            </svg>\n            <div id=\"tooltip\"></div> \n            <div id=\"details\"></div> \n        </div>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport { getSingleEndpoint} from \"@/assets/api_connector\";\nlet Buffer = require('buffer/').Buffer;\nconst wkx = require('wkx');\nconst d3 = require('d3');\n\nimport {BuildingMap, BuildingTypeLegend} from \"@/assets/BuildingMap\";\n\nconst bm = new BuildingMap();\nconst bl = new BuildingTypeLegend();\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  data(){\n      return {\n          buildings: [],\n      }\n  },\n  mounted(){\n      getSingleEndpoint({}, 'Buildings').then((response) => {\n          this.buildings = response.data.map(d => ({\n              type: \"Feature\",\n              geometry: wkx.Geometry.parse(Buffer.from(d.location, 'hex')).toGeoJSON(),\n              properties:{\n                  buildingId: d.buildingId,\n                  buildingType: d.buildingType,\n                  maxOccupancy: d.maxOccupancy,\n                  units: d.units,\n              },\n          }));\n          this.drawBuildings();\n      });\n  },\n  methods:{\n    drawBuildings() {\n  const buildings = d3.select(this.$refs.map).select('g.buildings')\n    .datum(this.buildings)\n    .selectAll('rect')\n    .data(d => d)\n    .join('rect')\n    .attr('x', d => this.xScale(d.x))\n    .attr('y', d => this.yScale(d.y) - this.yScale(d.height))\n    .attr('width', d => this.xScale(d.width))\n    .attr('height', d => this.yScale(d.height))\n    .attr('fill', d => this.colorScale(d.color))\n    .on('mouseover', (event, d) => {\n      d3.select('#tooltip')\n        .style('display', 'block')\n        .style('top', event.pageY + 'px')\n        .style('left', event.pageX + 'px')\n        .text(d.name);\n    })\n    .on('mouseout', () => {\n      d3.select('#tooltip')\n        .style('display', 'none');\n    })\n    .on('click', (event, d) => {\n      d3.select('#details')\n        .style('display', 'block')\n        .style('top', event.pageY + 'px')\n        .style('left', event.pageX + 'px')\n        .text(d.name + ': ' + d.maxOccupancy);\n    });\n}\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nsvg g.buildings path{\n    fill-opacity: 0.2;\n    stroke: grey;\n}\n\nsvg g.buildings path:hover{\n    fill-opacity: 10;\n}\n\n#details {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: white;\n    padding: 5px;\n    font-weight: bold;\n}\n\n</style>"],"mappings":"AAkBA,SAAAA,iBAAA;AACA,IAAAC,MAAA,GAAAC,OAAA,YAAAD,MAAA;AACA,MAAAE,GAAA,GAAAD,OAAA;AACA,MAAAE,EAAA,GAAAF,OAAA;AAEA,SAAAG,WAAA,EAAAC,kBAAA;AAEA,MAAAC,EAAA,OAAAF,WAAA;AACA,MAAAG,EAAA,OAAAF,kBAAA;AAEA;EACAG,IAAA;EACAC,UAAA,GACA;EACAC,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACAb,iBAAA,kBAAAc,IAAA,CAAAC,QAAA;MACA,KAAAH,SAAA,GAAAG,QAAA,CAAAJ,IAAA,CAAAK,GAAA,CAAAC,CAAA;QACAC,IAAA;QACAC,QAAA,EAAAhB,GAAA,CAAAiB,QAAA,CAAAC,KAAA,CAAApB,MAAA,CAAAqB,IAAA,CAAAL,CAAA,CAAAM,QAAA,UAAAC,SAAA;QACAC,UAAA;UACAC,UAAA,EAAAT,CAAA,CAAAS,UAAA;UACAC,YAAA,EAAAV,CAAA,CAAAU,YAAA;UACAC,YAAA,EAAAX,CAAA,CAAAW,YAAA;UACAC,KAAA,EAAAZ,CAAA,CAAAY;QACA;MACA;MACA,KAAAC,aAAA;IACA;EACA;EACAC,OAAA;IACAD,cAAA;MACA,MAAAlB,SAAA,GAAAR,EAAA,CAAA4B,MAAA,MAAAC,KAAA,CAAAjB,GAAA,EAAAgB,MAAA,gBACAE,KAAA,MAAAtB,SAAA,EACAuB,SAAA,SACAxB,IAAA,CAAAM,CAAA,IAAAA,CAAA,EACAmB,IAAA,SACAC,IAAA,MAAApB,CAAA,SAAAqB,MAAA,CAAArB,CAAA,CAAAsB,CAAA,GACAF,IAAA,MAAApB,CAAA,SAAAuB,MAAA,CAAAvB,CAAA,CAAAwB,CAAA,SAAAD,MAAA,CAAAvB,CAAA,CAAAyB,MAAA,GACAL,IAAA,UAAApB,CAAA,SAAAqB,MAAA,CAAArB,CAAA,CAAA0B,KAAA,GACAN,IAAA,WAAApB,CAAA,SAAAuB,MAAA,CAAAvB,CAAA,CAAAyB,MAAA,GACAL,IAAA,SAAApB,CAAA,SAAA2B,UAAA,CAAA3B,CAAA,CAAA4B,KAAA,GACAC,EAAA,eAAAC,KAAA,EAAA9B,CAAA;QACAb,EAAA,CAAA4B,MAAA,aACAgB,KAAA,qBACAA,KAAA,QAAAD,KAAA,CAAAE,KAAA,SACAD,KAAA,SAAAD,KAAA,CAAAG,KAAA,SACAC,IAAA,CAAAlC,CAAA,CAAAR,IAAA;MACA,GACAqC,EAAA;QACA1C,EAAA,CAAA4B,MAAA,aACAgB,KAAA;MACA,GACAF,EAAA,WAAAC,KAAA,EAAA9B,CAAA;QACAb,EAAA,CAAA4B,MAAA,aACAgB,KAAA,qBACAA,KAAA,QAAAD,KAAA,CAAAE,KAAA,SACAD,KAAA,SAAAD,KAAA,CAAAG,KAAA,SACAC,IAAA,CAAAlC,CAAA,CAAAR,IAAA,UAAAQ,CAAA,CAAAW,YAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
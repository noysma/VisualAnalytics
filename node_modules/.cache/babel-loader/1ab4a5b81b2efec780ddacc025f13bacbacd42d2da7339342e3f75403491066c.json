{"ast":null,"code":"import * as d3 from 'd3';\nexport function createScatterplot(svgElement, tooltipElement, data) {\n  // set the dimensions and margins of the graph\n  const margin = {\n    top: 10,\n    right: 30,\n    bottom: 30,\n    left: 60\n  };\n  const width = 700 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n\n  // append the svg object to the component element\n  const svg = d3.select(svgElement).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n  // Creazione della scala X\n  const x = d3.scaleLinear().domain([0, d3.max(data, d => +d.hourlyRate)]).range([0, width]);\n\n  // Creazione della scala Y\n  const y = d3.scaleLinear().domain([0, d3.max(data, d => +d.counts)]).range([height, 0]);\n\n  // Creazione dell'asse X\n  const xAxis = d3.axisBottom(x);\n  svg.append('g').attr('transform', `translate(0, ${height})`).call(xAxis);\n\n  // Creazione dell'asse Y\n  const yAxis = d3.axisLeft(y);\n  svg.append('g').call(yAxis);\n\n  // Mappa per tenere traccia dei colori dei jobId\n  const colorMap = {};\n\n  // Aggiunta dei punti\n  const dots = svg.selectAll('circle').data(data).enter().append('circle').attr('cx', d => x(+d.hourlyRate)).attr('cy', d => y(+d.counts)).attr('r', 5).style('fill', 'gray').on('mouseover', function (event, d) {\n    const jobId = d.jobId;\n    let color = colorMap[jobId];\n\n    // Se il colore per il jobId non è stato ancora assegnato, generane uno nuovo\n    if (!color) {\n      color = getRandomColor();\n      colorMap[jobId] = color;\n    }\n\n    // Cambia il colore dei punti con lo stesso jobId\n    dots.style('fill', dotData => dotData.jobId === jobId ? color : 'gray');\n\n    // Mostra il tooltip con le informazioni del punto\n    const tooltip = d3.select(tooltipElement);\n    tooltip.transition().duration(200).style('opacity', 1);\n    const svgRect = svgElement.getBoundingClientRect();\n    const xPosition = event.clientX - svgRect.left;\n    const yPosition = event.clientY - svgRect.top;\n    tooltip.html(`Job ID: ${d.jobId}`).style('left', `${xPosition - 35}px`).style('top', `${yPosition + 10}px`); // Adjust the y position\n  }).on('mouseout', function () {\n    // Ripristina il colore grigio per tutti i punti\n    dots.style('fill', 'gray');\n\n    // Nascondi il tooltip\n    const tooltip = d3.select(tooltipElement);\n    tooltip.transition().duration(500).style('opacity', 0);\n  }).on('click', function (event, d) {\n    const jobId = d.jobId;\n\n    // Cambia il colore dei punti con lo stesso jobId\n    dots.style('fill', dotData => dotData.jobId === jobId ? 'red' : 'gray');\n  });\n}\n\n// Funzione per ottenere un colore casuale\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}","map":{"version":3,"names":["d3","createScatterplot","svgElement","tooltipElement","data","margin","top","right","bottom","left","width","height","svg","select","attr","append","x","scaleLinear","domain","max","d","hourlyRate","range","y","counts","xAxis","axisBottom","call","yAxis","axisLeft","colorMap","dots","selectAll","enter","style","on","event","jobId","color","getRandomColor","dotData","tooltip","transition","duration","svgRect","getBoundingClientRect","xPosition","clientX","yPosition","clientY","html","letters","i","Math","floor","random"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/Turnover.js"],"sourcesContent":["import * as d3 from 'd3';\n\nexport function createScatterplot(svgElement, tooltipElement, data) {\n  // set the dimensions and margins of the graph\n  const margin = { top: 10, right: 30, bottom: 30, left: 60 };\n  const width = 700 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n\n  // append the svg object to the component element\n  const svg = d3.select(svgElement)\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n  // Creazione della scala X\n  const x = d3.scaleLinear()\n    .domain([0, d3.max(data, d => +d.hourlyRate)])\n    .range([0, width]);\n\n  // Creazione della scala Y\n  const y = d3.scaleLinear()\n    .domain([0, d3.max(data, d => +d.counts)])\n    .range([height, 0]);\n\n  // Creazione dell'asse X\n  const xAxis = d3.axisBottom(x);\n  svg.append('g')\n    .attr('transform', `translate(0, ${height})`)\n    .call(xAxis);\n\n  // Creazione dell'asse Y\n  const yAxis = d3.axisLeft(y);\n  svg.append('g')\n    .call(yAxis);\n\n  // Mappa per tenere traccia dei colori dei jobId\n  const colorMap = {};\n\n  // Aggiunta dei punti\n  const dots = svg.selectAll('circle')\n    .data(data)\n    .enter()\n    .append('circle')\n    .attr('cx', d => x(+d.hourlyRate))\n    .attr('cy', d => y(+d.counts))\n    .attr('r', 5)\n    .style('fill', 'gray')\n    .on('mouseover', function (event, d) {\n      const jobId = d.jobId;\n      let color = colorMap[jobId];\n\n      // Se il colore per il jobId non è stato ancora assegnato, generane uno nuovo\n      if (!color) {\n        color = getRandomColor();\n        colorMap[jobId] = color;\n      }\n\n      // Cambia il colore dei punti con lo stesso jobId\n      dots.style('fill', dotData => (dotData.jobId === jobId ? color : 'gray'));\n\n      // Mostra il tooltip con le informazioni del punto\n      const tooltip = d3.select(tooltipElement);\n      tooltip.transition().duration(200).style('opacity', 1);\n\n      const svgRect = svgElement.getBoundingClientRect();\n      const xPosition = event.clientX - svgRect.left;\n      const yPosition = event.clientY - svgRect.top;\n\n      tooltip.html(`Job ID: ${d.jobId}`)\n        .style('left', `${xPosition - 35}px`)\n        .style('top', `${yPosition + 10}px`); // Adjust the y position\n    })\n    .on('mouseout', function () {\n      // Ripristina il colore grigio per tutti i punti\n      dots.style('fill', 'gray');\n\n      // Nascondi il tooltip\n      const tooltip = d3.select(tooltipElement);\n      tooltip.transition().duration(500).style('opacity', 0);\n    })\n    .on('click', function (event, d) {\n      const jobId = d.jobId;\n\n      // Cambia il colore dei punti con lo stesso jobId\n      dots.style('fill', dotData => (dotData.jobId === jobId ? 'red' : 'gray'));\n    });\n}\n\n// Funzione per ottenere un colore casuale\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
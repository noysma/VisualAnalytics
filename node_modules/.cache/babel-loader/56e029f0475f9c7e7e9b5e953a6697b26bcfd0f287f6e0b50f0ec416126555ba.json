{"ast":null,"code":"import * as d3 from 'd3';\nexport default {\n  name: 'travel-duration',\n  data() {\n    return {\n      dataset: [],\n      selectedWeek: '',\n      margin: {\n        top: 20,\n        right: 30,\n        bottom: 40,\n        left: 40\n      },\n      width: 600,\n      height: 400\n    };\n  },\n  mounted() {\n    this.loadData();\n  },\n  methods: {\n    loadData() {\n      d3.csv('travelDuration.csv').then(data => {\n        this.dataset = data.map(d => ({\n          date: new Date(d.date),\n          travelDuration: +d.travelDuration / 60 // Convert minutes to hours\n        }));\n\n        this.createChart();\n      });\n    },\n    createChart() {\n      const svg = d3.select('#chart').append('svg').attr('width', this.width + this.margin.left + this.margin.right).attr('height', this.height + this.margin.top + this.margin.bottom).append('g').attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n      const xScale = d3.scaleBand().domain(d3.range(7)) // 7 days of the week\n      .rangeRound([0, this.width]).paddingInner(0.1);\n      const yScale = d3.scaleLinear().domain([0, d3.max(this.dataset, d => d.travelDuration)]).range([this.height, 0]);\n      const xAxis = d3.axisBottom(xScale).tickFormat((d, i) => this.getDayOfWeek(i));\n      const yAxis = d3.axisLeft(yScale);\n      svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0, ${this.height})`).call(xAxis);\n      svg.append('g').attr('class', 'y-axis').call(yAxis);\n      svg.selectAll('.bar').data(this.dataset).enter().append('rect').attr('class', 'bar').attr('x', d => xScale(d.date.getDay())).attr('y', d => yScale(d.travelDuration)).attr('width', xScale.bandwidth()).attr('height', d => this.height - yScale(d.travelDuration));\n    },\n    getDayOfWeek(day) {\n      const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n      return days[day];\n    }\n  }\n};","map":{"version":3,"names":["d3","name","data","dataset","selectedWeek","margin","top","right","bottom","left","width","height","mounted","loadData","methods","csv","then","map","d","date","Date","travelDuration","createChart","svg","select","append","attr","xScale","scaleBand","domain","range","rangeRound","paddingInner","yScale","scaleLinear","max","xAxis","axisBottom","tickFormat","i","getDayOfWeek","yAxis","axisLeft","call","selectAll","enter","getDay","bandwidth","day","days"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/TrafficPlot.js"],"sourcesContent":["import * as d3 from 'd3';\n\nexport default {\n  name: 'travel-duration',\n  data() {\n    return {\n      dataset: [],\n      selectedWeek: '',\n      margin: { top: 20, right: 30, bottom: 40, left: 40 },\n      width: 600,\n      height: 400,\n    };\n  },\n  mounted() {\n    this.loadData();\n  },\n  methods: {\n    loadData() {\n      d3.csv('travelDuration.csv').then((data) => {\n        this.dataset = data.map((d) => ({\n          date: new Date(d.date),\n          travelDuration: +d.travelDuration / 60, // Convert minutes to hours\n        }));\n\n        this.createChart();\n      });\n    },\n    createChart() {\n      const svg = d3\n        .select('#chart')\n        .append('svg')\n        .attr('width', this.width + this.margin.left + this.margin.right)\n        .attr('height', this.height + this.margin.top + this.margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n      const xScale = d3\n        .scaleBand()\n        .domain(d3.range(7)) // 7 days of the week\n        .rangeRound([0, this.width])\n        .paddingInner(0.1);\n\n      const yScale = d3\n        .scaleLinear()\n        .domain([0, d3.max(this.dataset, (d) => d.travelDuration)])\n        .range([this.height, 0]);\n\n      const xAxis = d3.axisBottom(xScale).tickFormat((d, i) => this.getDayOfWeek(i));\n      const yAxis = d3.axisLeft(yScale);\n\n      svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', `translate(0, ${this.height})`)\n        .call(xAxis);\n\n      svg.append('g').attr('class', 'y-axis').call(yAxis);\n\n      svg\n        .selectAll('.bar')\n        .data(this.dataset)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('x', (d) => xScale(d.date.getDay()))\n        .attr('y', (d) => yScale(d.travelDuration))\n        .attr('width', xScale.bandwidth())\n        .attr('height', (d) => this.height - yScale(d.travelDuration));\n    },\n    getDayOfWeek(day) {\n      const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n      return days[day];\n    },\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as d3 from 'd3';\nexport function drawHeatmap(data, containerId, width, height) {\n  // Select the existing SVG element if it exists, or create a new one\n  let svg = d3.select(`#${containerId} svg`);\n  if (svg.empty()) {\n    // Create an SVG element for the heatmap\n    svg = d3.select(`#${containerId}`).append('svg').attr('width', width).attr('height', height);\n  }\n\n  // Extract the necessary data for the heatmap (timestamps and current mode)\n  const heatmapData = data.map(entry => ({\n    timestamp: new Date(entry.timestamp.toDateString()),\n    mode: entry.currentMode\n  }));\n\n  // Get the unique modes in the data\n  const uniqueModes = [...new Set(heatmapData.map(d => d.mode))];\n\n  // Define the color scale for the heatmap based on the unique modes\n  const colorScale = d3.scaleOrdinal().domain(uniqueModes).range(d3.schemeCategory10);\n\n  // Calculate the height of each row\n  const rowHeight = height / heatmapData.length;\n\n  // Update the heatmap rectangles\n  const rects = svg.selectAll('rect').data(heatmapData);\n  rects.enter().append('rect').merge(rects).attr('x', (_, i) => i * rowHeight).attr('y', d => {\n    const dayStart = new Date(d.timestamp);\n    dayStart.setHours(0, 0, 0, 0);\n    const dayEnd = new Date(d.timestamp);\n    dayEnd.setHours(23, 59, 59, 999);\n    const yScale = d3.scaleTime().domain([dayStart, dayEnd]).range([0, width]);\n    return yScale(d.timestamp);\n  }).attr('width', rowHeight).attr('height', d => {\n    const dayStart = new Date(d.timestamp);\n    dayStart.setHours(0, 0, 0, 0);\n    const dayEnd = new Date(d.timestamp);\n    dayEnd.setHours(23, 59, 59, 999);\n    const yScale = d3.scaleTime().domain([dayStart, dayEnd]).range([0, width]);\n    return yScale(dayEnd) - yScale(dayStart);\n  }).style('fill', d => colorScale(d.mode));\n  rects.exit().remove();\n\n  // Add X-axis\n  svg.selectAll('.x-axis').remove();\n  const xScale = d3.scaleTime().domain(d3.extent(heatmapData, d => d.timestamp)).range([0, width]);\n  const xAxis = d3.axisBottom(xScale).ticks(d3.timeHour.every(3)); // Specifica gli intervalli di 3 ore\n  svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0, ${height - rowHeight})`).call(xAxis);\n\n  // Add X-axis label\n  svg.selectAll('.x-axis-label').remove();\n  svg.append('text').attr('class', 'x-axis-label').attr('x', width / 2).attr('y', height - rowHeight / 2 + 40).attr('text-anchor', 'middle').text('Timestamp');\n\n  // Add Y-axis\n  svg.selectAll('.y-axis').remove();\n  const yScale = d3.scaleBand().domain(heatmapData.map(d => d.mode)).range([0, height]);\n  svg.append('g').attr('class', 'y-axis').attr('transform', `translate(${rowHeight}, 0)`).call(d3.axisLeft(yScale));\n\n  // Add Y-axis label\n  svg.selectAll('.y-axis-label').remove();\n  svg.append('text').attr('class', 'y-axis-label').attr('x', rowHeight / 2 + 40).attr('y', height / 2).attr('text-anchor', 'middle').attr('transform', 'rotate(-90)').text('Modes');\n\n  // Add color legend\n  const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${width - 100}, ${rowHeight + 600})`);\n  const legendItems = legend.selectAll('.legend-item').data(uniqueModes).enter().append('g').attr('class', 'legend-item').attr('transform', (_, i) => `translate(-20, ${i * 20})`);\n  legendItems.append('rect').attr('width', 10).attr('height', 10).attr('fill', d => colorScale(d));\n  legendItems.append('text').attr('x', 15).attr('y', 8).text(d => d);\n\n  // Update the width and height attributes of the SVG element\n  svg.attr('width', width).attr('height', height);\n}","map":{"version":3,"names":["d3","drawHeatmap","data","containerId","width","height","svg","select","empty","append","attr","heatmapData","map","entry","timestamp","Date","toDateString","mode","currentMode","uniqueModes","Set","d","colorScale","scaleOrdinal","domain","range","schemeCategory10","rowHeight","length","rects","selectAll","enter","merge","_","i","dayStart","setHours","dayEnd","yScale","scaleTime","style","exit","remove","xScale","extent","xAxis","axisBottom","ticks","timeHour","every","call","text","scaleBand","axisLeft","legend","legendItems"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/RoutineComparison.js"],"sourcesContent":["import * as d3 from 'd3';\n\nexport function drawHeatmap(data, containerId, width, height) {\n  // Select the existing SVG element if it exists, or create a new one\n  let svg = d3.select(`#${containerId} svg`);\n\n  if (svg.empty()) {\n    // Create an SVG element for the heatmap\n    svg = d3.select(`#${containerId}`)\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height);\n  }\n\n  // Extract the necessary data for the heatmap (timestamps and current mode)\n  const heatmapData = data.map(entry => ({\n    timestamp: new Date(entry.timestamp.toDateString()),\n    mode: entry.currentMode,\n  }));\n\n  // Get the unique modes in the data\n  const uniqueModes = [...new Set(heatmapData.map(d => d.mode))];\n\n  // Define the color scale for the heatmap based on the unique modes\n  const colorScale = d3.scaleOrdinal()\n    .domain(uniqueModes)\n    .range(d3.schemeCategory10);\n\n  // Calculate the height of each row\n  const rowHeight = height / heatmapData.length;\n\n  // Update the heatmap rectangles\n  const rects = svg.selectAll('rect')\n    .data(heatmapData);\n\n  rects.enter()\n    .append('rect')\n    .merge(rects)\n    .attr('x', (_, i) => i * rowHeight)\n    .attr('y', d => {\n      const dayStart = new Date(d.timestamp);\n      dayStart.setHours(0, 0, 0, 0);\n      const dayEnd = new Date(d.timestamp);\n      dayEnd.setHours(23, 59, 59, 999);\n      const yScale = d3.scaleTime()\n        .domain([dayStart, dayEnd])\n        .range([0, width]);\n      return yScale(d.timestamp);\n    })\n    .attr('width', rowHeight)\n    .attr('height', d => {\n      const dayStart = new Date(d.timestamp);\n      dayStart.setHours(0, 0, 0, 0);\n      const dayEnd = new Date(d.timestamp);\n      dayEnd.setHours(23, 59, 59, 999);\n      const yScale = d3.scaleTime()\n        .domain([dayStart, dayEnd])\n        .range([0, width]);\n      return yScale(dayEnd) - yScale(dayStart);\n    })\n    .style('fill', d => colorScale(d.mode));\n\n  rects.exit().remove();\n\n  // Add X-axis\n  svg.selectAll('.x-axis').remove();\n  const xScale = d3.scaleTime()\n    .domain(d3.extent(heatmapData, d => d.timestamp))\n    .range([0, width]);\n  const xAxis = d3.axisBottom(xScale)\n    .ticks(d3.timeHour.every(3)); // Specifica gli intervalli di 3 ore\n  svg.append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', `translate(0, ${height - rowHeight})`)\n    .call(xAxis);\n\n  // Add X-axis label\n  svg.selectAll('.x-axis-label').remove();\n  svg.append('text')\n    .attr('class', 'x-axis-label')\n    .attr('x', width / 2)\n    .attr('y', height - rowHeight / 2 + 40)\n    .attr('text-anchor', 'middle')\n    .text('Timestamp');\n\n  // Add Y-axis\n  svg.selectAll('.y-axis').remove();\n  const yScale = d3.scaleBand()\n    .domain(heatmapData.map(d => d.mode))\n    .range([0, height]);\n  svg.append('g')\n    .attr('class', 'y-axis')\n    .attr('transform', `translate(${rowHeight}, 0)`)\n    .call(d3.axisLeft(yScale));\n\n  // Add Y-axis label\n  svg.selectAll('.y-axis-label').remove();\n  svg.append('text')\n    .attr('class', 'y-axis-label')\n    .attr('x', rowHeight / 2 + 40)\n    .attr('y', height / 2)\n    .attr('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .text('Modes');\n\n  // Add color legend\n  const legend = svg.append('g')\n    .attr('class', 'legend')\n    .attr('transform', `translate(${width - 100}, ${rowHeight + 600})`);\n\n  const legendItems = legend.selectAll('.legend-item')\n    .data(uniqueModes)\n    .enter()\n    .append('g')\n    .attr('class', 'legend-item')\n    .attr('transform', (_, i) => `translate(-20, ${i * 20})`);\n\n  legendItems.append('rect')\n    .attr('width', 10)\n    .attr('height', 10)\n    .attr('fill', d => colorScale(d));\n\n  legendItems.append('text')\n    .attr('x', 15)\n    .attr('y', 8)\n    .text(d => d);\n\n  // Update the width and height attributes of the SVG element\n  svg.attr('width', width)\n    .attr('height', height);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
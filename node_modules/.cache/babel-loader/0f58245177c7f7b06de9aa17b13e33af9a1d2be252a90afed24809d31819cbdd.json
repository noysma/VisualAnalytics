{"ast":null,"code":"import * as d3 from 'd3';\nimport { timeFormat } from 'd3-time-format';\nexport function drawChart(data, chartContainer) {\n  const margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n  const width = 600 - margin.left - margin.right;\n  const height = 400 - margin.top - margin.bottom;\n  const maxTravelDuration = d3.max(data, d => +d.travelDuration);\n  const svg = d3.select(chartContainer).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n  const xScale = d3.scaleBand().range([0, width]).padding(0.1).domain(data.map(d => getFormattedDate(d.date))); // Mappa le date ai giorni della settimana formattati\n\n  const yScale = d3.scaleLinear().range([height, 0]).domain([0, maxTravelDuration]);\n  svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`).call(d3.axisBottom(xScale));\n  svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(yScale).tickFormat(d3.format('.2s')).ticks(5));\n  svg.selectAll('.bar').data(data).enter().append('rect').attr('class', 'bar').attr('x', d => xScale(getFormattedDate(d.date))) // Utilizza la data formattata come posizione x\n  .attr('y', d => yScale(+d.travelDuration)).attr('width', xScale.bandwidth()).attr('height', d => height - yScale(+d.travelDuration));\n}\nexport function updateChart(data, selectedWeek, chartContainer) {\n  const weekData = data.slice(selectedWeek * 7, selectedWeek * 7 + 7);\n  const svg = d3.select(chartContainer).select('svg');\n  const margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n  const width = svg.attr('width') - margin.left - margin.right;\n  const height = svg.attr('height') - margin.top - margin.bottom;\n  const xScale = d3.scaleBand().range([0, width]).padding(0.1).domain(weekData.map(d => getFormattedDate(d.date))); // Mappa le date ai giorni della settimana formattati\n\n  const yScale = d3.scaleLinear().range([height, 0]).domain([0, d3.max(data, d => +d.travelDuration)]);\n  svg.select('.x-axis').call(d3.axisBottom(xScale));\n  svg.select('.y-axis').call(d3.axisLeft(yScale).tickFormat(d3.format('.2s')).ticks(5));\n  const bars = svg.selectAll('.bar').data(weekData, d => d.date);\n  bars.exit().remove();\n  bars.enter().append('rect').attr('class', 'bar').merge(bars).attr('x', d => margin.left + xScale(getFormattedDate(d.date))) // Utilizza la data formattata come posizione x\n  .attr('y', d => margin.top + yScale(+d.travelDuration)).attr('width', xScale.bandwidth()).attr('height', d => height - yScale(+d.travelDuration));\n}\n\n// Funzione per ottenere la data formattata come \"giorno mese anno\"\nfunction getFormattedDate(dateString) {\n  const date = new Date(dateString);\n  const formatDayOfMonth = timeFormat('%e'); // Formato per ottenere il giorno del mese\n  const formatMonth = timeFormat('%B'); // Formato per ottenere il nome del mese\n  const formatYear = timeFormat('%Y'); // Formato per ottenere l'anno\n  return `${formatDayOfMonth(date)} ${formatMonth(date)} ${formatYear(date)}`;\n}","map":{"version":3,"names":["d3","timeFormat","drawChart","data","chartContainer","margin","top","right","bottom","left","width","height","maxTravelDuration","max","d","travelDuration","svg","select","append","attr","xScale","scaleBand","range","padding","domain","map","getFormattedDate","date","yScale","scaleLinear","call","axisBottom","axisLeft","tickFormat","format","ticks","selectAll","enter","bandwidth","updateChart","selectedWeek","weekData","slice","bars","exit","remove","merge","dateString","Date","formatDayOfMonth","formatMonth","formatYear"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/TrafficPlot.js"],"sourcesContent":["import * as d3 from 'd3';\nimport { timeFormat } from 'd3-time-format';\n\n\nexport function drawChart(data, chartContainer) {\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  const width = 600 - margin.left - margin.right;\n  const height = 400 - margin.top - margin.bottom;\n\n  const maxTravelDuration = d3.max(data, (d) => +d.travelDuration);\n\n  const svg = d3\n    .select(chartContainer)\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left},${margin.top})`);\n\n  const xScale = d3\n    .scaleBand()\n    .range([0, width])\n    .padding(0.1)\n    .domain(data.map((d) => getFormattedDate(d.date))); // Mappa le date ai giorni della settimana formattati\n\n  const yScale = d3\n    .scaleLinear()\n    .range([height, 0])\n    .domain([0, maxTravelDuration]);\n\n  svg\n    .append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', `translate(0,${height})`)\n    .call(d3.axisBottom(xScale));\n\n  svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(yScale).tickFormat(d3.format('.2s')).ticks(5));\n\n  svg\n    .selectAll('.bar')\n    .data(data)\n    .enter()\n    .append('rect')\n    .attr('class', 'bar')\n    .attr('x', (d) => xScale(getFormattedDate(d.date))) // Utilizza la data formattata come posizione x\n    .attr('y', (d) => yScale(+d.travelDuration))\n    .attr('width', xScale.bandwidth())\n    .attr('height', (d) => height - yScale(+d.travelDuration));\n}\n\nexport function updateChart(data, selectedWeek, chartContainer) {\n  const weekData = data.slice(selectedWeek * 7, selectedWeek * 7 + 7);\n  const svg = d3.select(chartContainer).select('svg');\n\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  const width = svg.attr('width') - margin.left - margin.right;\n  const height = svg.attr('height') - margin.top - margin.bottom;\n\n  const xScale = d3\n    .scaleBand()\n    .range([0, width])\n    .padding(0.1)\n    .domain(weekData.map((d) => getFormattedDate(d.date))); // Mappa le date ai giorni della settimana formattati\n\n  const yScale = d3\n    .scaleLinear()\n    .range([height, 0])\n    .domain([0, d3.max(data, (d) => +d.travelDuration)]);\n\n  svg.select('.x-axis').call(d3.axisBottom(xScale));\n  svg.select('.y-axis').call(d3.axisLeft(yScale).tickFormat(d3.format('.2s')).ticks(5));\n\n  const bars = svg.selectAll('.bar').data(weekData, (d) => d.date);\n\n  bars.exit().remove();\n\n  bars\n    .enter()\n    .append('rect')\n    .attr('class', 'bar')\n    .merge(bars)\n    .attr('x', (d) => margin.left + xScale(getFormattedDate(d.date))) // Utilizza la data formattata come posizione x\n    .attr('y', (d) => margin.top + yScale(+d.travelDuration))\n    .attr('width', xScale.bandwidth())\n    .attr('height', (d) => height - yScale(+d.travelDuration));\n}\n\n// Funzione per ottenere la data formattata come \"giorno mese anno\"\nfunction getFormattedDate(dateString) {\n  const date = new Date(dateString);\n  const formatDayOfMonth = timeFormat('%e'); // Formato per ottenere il giorno del mese\n  const formatMonth = timeFormat('%B'); // Formato per ottenere il nome del mese\n  const formatYear = timeFormat('%Y'); // Formato per ottenere l'anno\n  return `${formatDayOfMonth(date)} ${formatMonth(date)} ${formatYear(date)}`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
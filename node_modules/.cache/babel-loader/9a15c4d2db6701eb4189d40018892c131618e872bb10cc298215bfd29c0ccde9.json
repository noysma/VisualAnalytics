{"ast":null,"code":"import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n  function me(selection) {\n    const buildingTypes = d3.groups(selection.datum().map(d => d.properties.buildingType), d => d).map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const path = d3.geoPath().projection(projection);\n    selection.selectAll(\"path\").data(selection.datum()).join(\"path\").attr(\"d\", path).attr(\"fill\", color).style(\"stroke\", \"grey\");\n  }\n  me.color = function () {\n    return color;\n  };\n  me.extent = function () {\n    return extent;\n  };\n  return me;\n}\nfunction BuildingPub() {\n  const colorScale = d3.scaleSequential().domain([8, 12]).interpolator(d3.interpolateRedYellow);\n  function me(selection, extent) {\n    const pubIds = d3.groups(selection.datum().map(d => d.properties.location), d => d).map(d => d[0]);\n    console.log(\"pubIds\", pubIds);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\").attr(\"width\", 200).attr(\"height\", 200);\n\n    // Crea intervalli di valori per la legenda\n    const tickValues = ['<8', '8-9.99', '10-12', '>12'];\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\").data(tickValues).enter().append(\"rect\").attr(\"class\", \"legend-rect\").attr(\"x\", 10).attr(\"y\", (d, i) => 10 + i * 40).attr(\"width\", 20).attr(\"height\", 30).attr(\"fill\", d => {\n      if (d === '<8') {\n        return colorScale(7.99);\n      } else if (d === '>12') {\n        return colorScale(12.01);\n      } else {\n        const range = d.split('-').map(Number);\n        return colorScale((range[0] + range[1]) / 2);\n      }\n    });\n\n    // Aggiungi le etichette per gli intervalli di valori nella legenda\n    legendSvg.selectAll(\".legend-label\").data(tickValues).enter().append(\"text\").attr(\"class\", \"legend-label\").attr(\"x\", 40).attr(\"y\", (d, i) => 25 + i * 40).text(d => d);\n\n    // Aggiungi i punti sulla mappa\n    selection.selectAll(\".pub\").data(selection.datum()).join(\"circle\").attr(\"class\", \"pub\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => {\n      if (d.properties.hourlyCost < 8) {\n        return colorScale(7.99);\n      } else if (d.properties.hourlyCost > 12) {\n        return colorScale(12.01);\n      } else {\n        return colorScale(d.properties.hourlyCost);\n      }\n    }).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const hourlyCost = d.properties.hourlyCost;\n      tooltip.style(\"opacity\", 1).html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\nfunction BuildingRestaurant() {\n  const colorScale = d3.scaleDiverging(d3.interpolateReds);\n  function me(selection, extent) {\n    const restaurantData = selection.datum();\n    const restaurantId = d3.groups(restaurantData, d => d.properties.restaurantId).map(d => ({\n      restaurantId: d[0],\n      totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n    }));\n    console.log(\"restaurantData\", restaurantData);\n    console.log(\"restaurantId\", restaurantId);\n    const projection = d3.geoIdentity().reflectY(true).fitSize([650, 650], extent);\n    const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n    colorScale.domain(foodCostExtent);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n    selection.selectAll(\".restaurant\").data(restaurantData).join(\"circle\").attr(\"class\", \"restaurant\").attr(\"cx\", d => projection(d.geometry.coordinates)[0]).attr(\"cy\", d => projection(d.geometry.coordinates)[1]).attr(\"r\", 10).attr(\"fill\", d => colorScale(d.properties.foodCost)).style(\"stroke\", \"black\").on(\"mouseover\", (event, d) => {\n      const foodCost = d.properties.foodCost;\n      tooltip.style(\"opacity\", 1).html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`).style(\"left\", event.pageX + \"px\").style(\"top\", event.pageY + \"px\");\n    }).on(\"mouseout\", () => {\n      tooltip.style(\"opacity\", 0);\n    });\n  }\n  return me;\n}\nexport { BuildingMap, BuildingPub, BuildingRestaurant };","map":{"version":3,"names":["d3","BuildingMap","color","extent","me","selection","buildingTypes","groups","datum","map","d","properties","buildingType","console","log","type","geometries","geometry","projection","geoIdentity","reflectY","fitSize","path","geoPath","selectAll","data","join","attr","style","BuildingPub","colorScale","scaleSequential","domain","interpolator","interpolateRedYellow","pubIds","location","tooltip","select","append","legendSvg","tickValues","enter","i","range","split","Number","text","coordinates","hourlyCost","on","event","html","format","pageX","pageY","BuildingRestaurant","scaleDiverging","interpolateReds","restaurantData","restaurantId","totalFoodCost","sum","foodCost","foodCostExtent"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/BusinessStatus.js"],"sourcesContent":["import * as d3 from \"d3\";\n\n// M A P\nfunction BuildingMap() {\n  const color = \"#ffffff\";\n  let extent;\n\n  function me(selection) {\n    const buildingTypes = d3\n      .groups(selection.datum().map(d => d.properties.buildingType), d => d)\n      .map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n\n    extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const path = d3.geoPath().projection(projection);\n\n    selection\n      .selectAll(\"path\")\n      .data(selection.datum())\n      .join(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", color)\n      .style(\"stroke\", \"grey\");\n  }\n\n  me.color = function () {\n    return color;\n  };\n\n  me.extent = function() {\n    return extent\n  };\n\n  return me;\n}\n\nfunction BuildingPub() {\n  const colorScale = d3.scaleSequential()\n    .domain([8, 12])\n    .interpolator(d3.interpolateRedYellow);\n\n  function me(selection, extent) {\n    const pubIds = d3\n      .groups(selection.datum().map(d => d.properties.location), d => d)\n      .map(d => d[0]);\n\n    console.log(\"pubIds\", pubIds);\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    // Aggiungi un elemento SVG per la legenda\n    const legendSvg = selection.append(\"svg\")\n      .attr(\"width\", 200)\n      .attr(\"height\", 200);\n\n    // Crea intervalli di valori per la legenda\n    const tickValues = ['<8', '8-9.99', '10-12', '>12'];\n\n    // Aggiungi i rettangoli colorati nella legenda\n    legendSvg.selectAll(\".legend-rect\")\n      .data(tickValues)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"legend-rect\")\n      .attr(\"x\", 10)\n      .attr(\"y\", (d, i) => 10 + i * 40)\n      .attr(\"width\", 20)\n      .attr(\"height\", 30)\n      .attr(\"fill\", d => {\n        if (d === '<8') {\n          return colorScale(7.99);\n        } else if (d === '>12') {\n          return colorScale(12.01);\n        } else {\n          const range = d.split('-').map(Number);\n          return colorScale((range[0] + range[1]) / 2);\n        }\n      });\n\n    // Aggiungi le etichette per gli intervalli di valori nella legenda\n    legendSvg.selectAll(\".legend-label\")\n      .data(tickValues)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"legend-label\")\n      .attr(\"x\", 40)\n      .attr(\"y\", (d, i) => 25 + i * 40)\n      .text(d => d);\n\n    // Aggiungi i punti sulla mappa\n    selection\n      .selectAll(\".pub\")\n      .data(selection.datum())\n      .join(\"circle\")\n      .attr(\"class\", \"pub\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 10)\n      .attr(\"fill\", d => {\n        if (d.properties.hourlyCost < 8) {\n          return colorScale(7.99);\n        } else if (d.properties.hourlyCost > 12) {\n          return colorScale(12.01);\n        } else {\n          return colorScale(d.properties.hourlyCost);\n        }\n      })\n      .style(\"stroke\", \"black\")\n      .on(\"mouseover\", (event, d) => {\n        const hourlyCost = d.properties.hourlyCost;\n        tooltip\n          .style(\"opacity\", 1)\n          .html(`Hourly cost: $ ${d3.format(\".2f\")(hourlyCost)}`)\n          .style(\"left\", event.pageX + \"px\")\n          .style(\"top\", event.pageY + \"px\");\n      })\n      .on(\"mouseout\", () => {\n        tooltip.style(\"opacity\", 0);\n      });\n  }\n\n  return me;\n}\n\n\n\n\n\n\nfunction BuildingRestaurant() {\n  const colorScale = d3.scaleDiverging(d3.interpolateReds);\n\n  function me(selection, extent) {\n    const restaurantData = selection.datum();\n\n    const restaurantId = d3\n      .groups(restaurantData, d => d.properties.restaurantId)\n      .map(d => ({\n        restaurantId: d[0],\n        totalFoodCost: d3.sum(d[1], d => d.properties.foodCost)\n      }));\n\n    console.log(\"restaurantData\", restaurantData);\n    console.log(\"restaurantId\", restaurantId);\n\n    const projection = d3\n      .geoIdentity()\n      .reflectY(true)\n      .fitSize([650, 650], extent);\n\n    const foodCostExtent = d3.extent(restaurantData, d => d.properties.foodCost);\n    colorScale.domain(foodCostExtent);\n\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    selection\n      .selectAll(\".restaurant\")\n      .data(restaurantData)\n      .join(\"circle\")\n      .attr(\"class\", \"restaurant\")\n      .attr(\"cx\", d => projection(d.geometry.coordinates)[0])\n      .attr(\"cy\", d => projection(d.geometry.coordinates)[1])\n      .attr(\"r\", 10)\n      .attr(\"fill\", d => colorScale(d.properties.foodCost))\n      .style(\"stroke\", \"black\")\n      .on(\"mouseover\", (event, d) => {\n        const foodCost = d.properties.foodCost;\n        tooltip\n          .style(\"opacity\", 1)\n          .html(`Food cost: $ ${d3.format(\".2f\")(foodCost)}`)\n          .style(\"left\", event.pageX + \"px\")\n          .style(\"top\", event.pageY + \"px\");\n      })\n      .on(\"mouseout\", () => {\n        tooltip.style(\"opacity\", 0);\n      });\n  }\n\n  return me;\n}\n\nexport { BuildingMap, BuildingPub, BuildingRestaurant };\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
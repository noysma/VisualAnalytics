{"ast":null,"code":"import * as d3 from \"d3\";\nexport class TrafficPlot {\n  constructor(data) {\n    const parsedData = data.map(d => {\n      const startDate = new Date(d.travelStartTime);\n      const endDate = new Date(d.travelEndTime);\n      const travelTime = (endDate - startDate) / (1000 * 60);\n      return {\n        startDate,\n        endDate,\n        travelTime\n      };\n    });\n    const weekStart = new Date(parsedData[0].startDate.getFullYear(), parsedData[0].startDate.getMonth(), parsedData[0].startDate.getDate() - parsedData[0].startDate.getDay());\n    const weekEnd = new Date(parsedData[parsedData.length - 1].startDate.getFullYear(), parsedData[parsedData.length - 1].startDate.getMonth(), parsedData[parsedData.length - 1].startDate.getDate() + 6);\n    const totalWeeks = Math.ceil((weekEnd - weekStart) / (1000 * 60 * 60 * 24 * 7));\n    this.totalWeeks = totalWeeks;\n    this.weekStart = weekStart;\n    this.currentWeekIndex = 0;\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    svg.setAttribute(\"width\", width + margin.left + margin.right);\n    svg.setAttribute(\"height\", height + margin.top + margin.bottom);\n    const chart = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    chart.setAttribute(\"transform\", `translate(${margin.left},${margin.top})`);\n    svg.appendChild(chart);\n    const updateChart = () => {\n      const currentWeekStart = new Date(this.weekStart.getFullYear(), this.weekStart.getMonth(), this.weekStart.getDate() + this.currentWeekIndex * 7);\n      const currentWeekEnd = new Date(currentWeekStart.getFullYear(), currentWeekStart.getMonth(), currentWeekStart.getDate() + 6);\n      const currentWeekData = parsedData.filter(d => {\n        return d.startDate >= currentWeekStart && d.startDate <= currentWeekEnd;\n      });\n      const maxTravelTime = d3.max(currentWeekData, d => d.travelTime);\n      this.maxTravelTime = maxTravelTime;\n      const weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n      const totalTravelTime = parsedData.reduce((total, d) => total + d.travelTime, 0);\n      this.totalTravelTime = totalTravelTime;\n      const totalTravelTimes = weekdays.map(day => {\n        const dayTravelTimes = currentWeekData.filter(d => d.startDate.getDay() === weekdays.indexOf(day));\n        const totalTravelTime = d3.sum(dayTravelTimes, d => d.travelTime);\n        return {\n          day,\n          totalTravelTime\n        };\n      });\n      while (chart.firstChild) {\n        chart.removeChild(chart.firstChild);\n      }\n      const x = d3.scaleBand().range([0, width]).padding(0.1).domain(weekdays);\n      const y = d3.scaleLinear().range([height, 0]).domain([0, maxTravelTime]);\n      const xAxis = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n      xAxis.setAttribute(\"class\", \"x-axis\");\n      xAxis.setAttribute(\"transform\", `translate(0,${height})`);\n      chart.appendChild(xAxis);\n      d3.select(xAxis).call(d3.axisBottom(x));\n      const yAxis = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n      yAxis.setAttribute(\"class\", \"y-axis\");\n      chart.appendChild(yAxis);\n      d3.select(yAxis).call(d3.axisLeft(y));\n      totalTravelTimes.forEach(d => {\n        const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        rect.setAttribute(\"class\", \"bar\");\n        rect.setAttribute(\"x\", x(d.day));\n        rect.setAttribute(\"y\", y(d.totalTravelTime));\n        rect.setAttribute(\"width\", x.bandwidth());\n        rect.setAttribute(\"height\", height - y(d.totalTravelTime));\n        chart.appendChild(rect);\n      });\n    };\n    updateChart();\n    this.nextWeek = () => {\n      if (this.currentWeekIndex < this.totalWeeks - 1) {\n        this.currentWeekIndex++;\n        updateChart();\n      }\n    };\n    this.previousWeek = () => {\n      if (this.currentWeekIndex > 0) {\n        this.currentWeekIndex--;\n        updateChart();\n      }\n    };\n  }\n}","map":{"version":3,"names":["d3","TrafficPlot","constructor","data","parsedData","map","d","startDate","Date","travelStartTime","endDate","travelEndTime","travelTime","weekStart","getFullYear","getMonth","getDate","getDay","weekEnd","length","totalWeeks","Math","ceil","currentWeekIndex","margin","top","right","bottom","left","width","height","svg","document","createElementNS","setAttribute","chart","appendChild","updateChart","currentWeekStart","currentWeekEnd","currentWeekData","filter","maxTravelTime","max","weekdays","totalTravelTime","reduce","total","totalTravelTimes","day","dayTravelTimes","indexOf","sum","firstChild","removeChild","x","scaleBand","range","padding","domain","y","scaleLinear","xAxis","select","call","axisBottom","yAxis","axisLeft","forEach","rect","bandwidth","nextWeek","previousWeek"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/TrafficPlot.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nexport class TrafficPlot {\n    constructor(data) {\n      const parsedData = data.map((d) => {\n        const startDate = new Date(d.travelStartTime);\n        const endDate = new Date(d.travelEndTime);\n        const travelTime = (endDate - startDate) / (1000 * 60);\n        return { startDate, endDate, travelTime };\n      });\n  \n      const weekStart = new Date(parsedData[0].startDate.getFullYear(), parsedData[0].startDate.getMonth(), parsedData[0].startDate.getDate() - parsedData[0].startDate.getDay());\n      const weekEnd = new Date(parsedData[parsedData.length - 1].startDate.getFullYear(), parsedData[parsedData.length - 1].startDate.getMonth(), parsedData[parsedData.length - 1].startDate.getDate() + 6);\n      const totalWeeks = Math.ceil((weekEnd - weekStart) / (1000 * 60 * 60 * 24 * 7));\n      this.totalWeeks = totalWeeks;\n      this.weekStart = weekStart;\n      this.currentWeekIndex = 0;\n  \n      const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n      const width = 800 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n  \n      const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n      svg.setAttribute(\"width\", width + margin.left + margin.right);\n      svg.setAttribute(\"height\", height + margin.top + margin.bottom);\n  \n      const chart = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n      chart.setAttribute(\"transform\", `translate(${margin.left},${margin.top})`);\n      svg.appendChild(chart);\n  \n      const updateChart = () => {\n        const currentWeekStart = new Date(this.weekStart.getFullYear(), this.weekStart.getMonth(), this.weekStart.getDate() + (this.currentWeekIndex * 7));\n        const currentWeekEnd = new Date(currentWeekStart.getFullYear(), currentWeekStart.getMonth(), currentWeekStart.getDate() + 6);\n        const currentWeekData = parsedData.filter((d) => {\n          return d.startDate >= currentWeekStart && d.startDate <= currentWeekEnd;\n        });\n        const maxTravelTime = d3.max(currentWeekData, (d) => d.travelTime);\n        this.maxTravelTime = maxTravelTime;\n  \n        const weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n        const totalTravelTime = parsedData.reduce((total, d) => total + d.travelTime, 0);\n        this.totalTravelTime = totalTravelTime;\n        const totalTravelTimes = weekdays.map((day) => {\n          const dayTravelTimes = currentWeekData.filter((d) => d.startDate.getDay() === weekdays.indexOf(day));\n          const totalTravelTime = d3.sum(dayTravelTimes, (d) => d.travelTime);\n          return { day, totalTravelTime };\n        });\n  \n        while (chart.firstChild) {\n          chart.removeChild(chart.firstChild);\n        }\n  \n        const x = d3.scaleBand().range([0, width]).padding(0.1).domain(weekdays);\n        const y = d3.scaleLinear().range([height, 0]).domain([0, maxTravelTime]);\n  \n        const xAxis = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        xAxis.setAttribute(\"class\", \"x-axis\");\n        xAxis.setAttribute(\"transform\", `translate(0,${height})`);\n        chart.appendChild(xAxis);\n        d3.select(xAxis).call(d3.axisBottom(x));\n  \n        const yAxis = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        yAxis.setAttribute(\"class\", \"y-axis\");\n        chart.appendChild(yAxis);\n        d3.select(yAxis).call(d3.axisLeft(y));\n  \n        totalTravelTimes.forEach((d) => {\n          const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n          rect.setAttribute(\"class\", \"bar\");\n          rect.setAttribute(\"x\", x(d.day));\n          rect.setAttribute(\"y\", y(d.totalTravelTime));\n          rect.setAttribute(\"width\", x.bandwidth());\n          rect.setAttribute(\"height\", height - y(d.totalTravelTime));\n          chart.appendChild(rect);\n        });\n      };\n  \n      updateChart();\n  \n      this.nextWeek = () => {\n        if (this.currentWeekIndex < this.totalWeeks - 1) {\n          this.currentWeekIndex++;\n          updateChart();\n        }\n      };\n  \n      this.previousWeek = () => {\n        if (this.currentWeekIndex > 0) {\n          this.currentWeekIndex--;\n          updateChart();\n        }\n      };\n    }\n  }\n  "],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,IAAI;AAExB,OAAO,MAAMC,WAAW,CAAC;EACrBC,WAAWA,CAACC,IAAI,EAAE;IAChB,MAAMC,UAAU,GAAGD,IAAI,CAACE,GAAG,CAAEC,CAAC,IAAK;MACjC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACG,eAAe,CAAC;MAC7C,MAAMC,OAAO,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACK,aAAa,CAAC;MACzC,MAAMC,UAAU,GAAG,CAACF,OAAO,GAAGH,SAAS,KAAK,IAAI,GAAG,EAAE,CAAC;MACtD,OAAO;QAAEA,SAAS;QAAEG,OAAO;QAAEE;MAAW,CAAC;IAC3C,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAG,IAAIL,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC,CAACG,SAAS,CAACO,WAAW,CAAC,CAAC,EAAEV,UAAU,CAAC,CAAC,CAAC,CAACG,SAAS,CAACQ,QAAQ,CAAC,CAAC,EAAEX,UAAU,CAAC,CAAC,CAAC,CAACG,SAAS,CAACS,OAAO,CAAC,CAAC,GAAGZ,UAAU,CAAC,CAAC,CAAC,CAACG,SAAS,CAACU,MAAM,CAAC,CAAC,CAAC;IAC3K,MAAMC,OAAO,GAAG,IAAIV,IAAI,CAACJ,UAAU,CAACA,UAAU,CAACe,MAAM,GAAG,CAAC,CAAC,CAACZ,SAAS,CAACO,WAAW,CAAC,CAAC,EAAEV,UAAU,CAACA,UAAU,CAACe,MAAM,GAAG,CAAC,CAAC,CAACZ,SAAS,CAACQ,QAAQ,CAAC,CAAC,EAAEX,UAAU,CAACA,UAAU,CAACe,MAAM,GAAG,CAAC,CAAC,CAACZ,SAAS,CAACS,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACtM,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAAC,CAACJ,OAAO,GAAGL,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC/E,IAAI,CAACO,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACP,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACU,gBAAgB,GAAG,CAAC;IAEzB,MAAMC,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC3D,MAAMC,KAAK,GAAG,GAAG,GAAGL,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;IAC9C,MAAMI,MAAM,GAAG,GAAG,GAAGN,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;IAE/C,MAAMI,GAAG,GAAGC,QAAQ,CAACC,eAAe,CAAC,4BAA4B,EAAE,KAAK,CAAC;IACzEF,GAAG,CAACG,YAAY,CAAC,OAAO,EAAEL,KAAK,GAAGL,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK,CAAC;IAC7DK,GAAG,CAACG,YAAY,CAAC,QAAQ,EAAEJ,MAAM,GAAGN,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM,CAAC;IAE/D,MAAMQ,KAAK,GAAGH,QAAQ,CAACC,eAAe,CAAC,4BAA4B,EAAE,GAAG,CAAC;IACzEE,KAAK,CAACD,YAAY,CAAC,WAAW,EAAG,aAAYV,MAAM,CAACI,IAAK,IAAGJ,MAAM,CAACC,GAAI,GAAE,CAAC;IAC1EM,GAAG,CAACK,WAAW,CAACD,KAAK,CAAC;IAEtB,MAAME,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,gBAAgB,GAAG,IAAI9B,IAAI,CAAC,IAAI,CAACK,SAAS,CAACC,WAAW,CAAC,CAAC,EAAE,IAAI,CAACD,SAAS,CAACE,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACF,SAAS,CAACG,OAAO,CAAC,CAAC,GAAI,IAAI,CAACO,gBAAgB,GAAG,CAAE,CAAC;MAClJ,MAAMgB,cAAc,GAAG,IAAI/B,IAAI,CAAC8B,gBAAgB,CAACxB,WAAW,CAAC,CAAC,EAAEwB,gBAAgB,CAACvB,QAAQ,CAAC,CAAC,EAAEuB,gBAAgB,CAACtB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC5H,MAAMwB,eAAe,GAAGpC,UAAU,CAACqC,MAAM,CAAEnC,CAAC,IAAK;QAC/C,OAAOA,CAAC,CAACC,SAAS,IAAI+B,gBAAgB,IAAIhC,CAAC,CAACC,SAAS,IAAIgC,cAAc;MACzE,CAAC,CAAC;MACF,MAAMG,aAAa,GAAG1C,EAAE,CAAC2C,GAAG,CAACH,eAAe,EAAGlC,CAAC,IAAKA,CAAC,CAACM,UAAU,CAAC;MAClE,IAAI,CAAC8B,aAAa,GAAGA,aAAa;MAElC,MAAME,QAAQ,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC;MAC/F,MAAMC,eAAe,GAAGzC,UAAU,CAAC0C,MAAM,CAAC,CAACC,KAAK,EAAEzC,CAAC,KAAKyC,KAAK,GAAGzC,CAAC,CAACM,UAAU,EAAE,CAAC,CAAC;MAChF,IAAI,CAACiC,eAAe,GAAGA,eAAe;MACtC,MAAMG,gBAAgB,GAAGJ,QAAQ,CAACvC,GAAG,CAAE4C,GAAG,IAAK;QAC7C,MAAMC,cAAc,GAAGV,eAAe,CAACC,MAAM,CAAEnC,CAAC,IAAKA,CAAC,CAACC,SAAS,CAACU,MAAM,CAAC,CAAC,KAAK2B,QAAQ,CAACO,OAAO,CAACF,GAAG,CAAC,CAAC;QACpG,MAAMJ,eAAe,GAAG7C,EAAE,CAACoD,GAAG,CAACF,cAAc,EAAG5C,CAAC,IAAKA,CAAC,CAACM,UAAU,CAAC;QACnE,OAAO;UAAEqC,GAAG;UAAEJ;QAAgB,CAAC;MACjC,CAAC,CAAC;MAEF,OAAOV,KAAK,CAACkB,UAAU,EAAE;QACvBlB,KAAK,CAACmB,WAAW,CAACnB,KAAK,CAACkB,UAAU,CAAC;MACrC;MAEA,MAAME,CAAC,GAAGvD,EAAE,CAACwD,SAAS,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE5B,KAAK,CAAC,CAAC,CAAC6B,OAAO,CAAC,GAAG,CAAC,CAACC,MAAM,CAACf,QAAQ,CAAC;MACxE,MAAMgB,CAAC,GAAG5D,EAAE,CAAC6D,WAAW,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC3B,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEjB,aAAa,CAAC,CAAC;MAExE,MAAMoB,KAAK,GAAG9B,QAAQ,CAACC,eAAe,CAAC,4BAA4B,EAAE,GAAG,CAAC;MACzE6B,KAAK,CAAC5B,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC;MACrC4B,KAAK,CAAC5B,YAAY,CAAC,WAAW,EAAG,eAAcJ,MAAO,GAAE,CAAC;MACzDK,KAAK,CAACC,WAAW,CAAC0B,KAAK,CAAC;MACxB9D,EAAE,CAAC+D,MAAM,CAACD,KAAK,CAAC,CAACE,IAAI,CAAChE,EAAE,CAACiE,UAAU,CAACV,CAAC,CAAC,CAAC;MAEvC,MAAMW,KAAK,GAAGlC,QAAQ,CAACC,eAAe,CAAC,4BAA4B,EAAE,GAAG,CAAC;MACzEiC,KAAK,CAAChC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC;MACrCC,KAAK,CAACC,WAAW,CAAC8B,KAAK,CAAC;MACxBlE,EAAE,CAAC+D,MAAM,CAACG,KAAK,CAAC,CAACF,IAAI,CAAChE,EAAE,CAACmE,QAAQ,CAACP,CAAC,CAAC,CAAC;MAErCZ,gBAAgB,CAACoB,OAAO,CAAE9D,CAAC,IAAK;QAC9B,MAAM+D,IAAI,GAAGrC,QAAQ,CAACC,eAAe,CAAC,4BAA4B,EAAE,MAAM,CAAC;QAC3EoC,IAAI,CAACnC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC;QACjCmC,IAAI,CAACnC,YAAY,CAAC,GAAG,EAAEqB,CAAC,CAACjD,CAAC,CAAC2C,GAAG,CAAC,CAAC;QAChCoB,IAAI,CAACnC,YAAY,CAAC,GAAG,EAAE0B,CAAC,CAACtD,CAAC,CAACuC,eAAe,CAAC,CAAC;QAC5CwB,IAAI,CAACnC,YAAY,CAAC,OAAO,EAAEqB,CAAC,CAACe,SAAS,CAAC,CAAC,CAAC;QACzCD,IAAI,CAACnC,YAAY,CAAC,QAAQ,EAAEJ,MAAM,GAAG8B,CAAC,CAACtD,CAAC,CAACuC,eAAe,CAAC,CAAC;QAC1DV,KAAK,CAACC,WAAW,CAACiC,IAAI,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC;IAEDhC,WAAW,CAAC,CAAC;IAEb,IAAI,CAACkC,QAAQ,GAAG,MAAM;MACpB,IAAI,IAAI,CAAChD,gBAAgB,GAAG,IAAI,CAACH,UAAU,GAAG,CAAC,EAAE;QAC/C,IAAI,CAACG,gBAAgB,EAAE;QACvBc,WAAW,CAAC,CAAC;MACf;IACF,CAAC;IAED,IAAI,CAACmC,YAAY,GAAG,MAAM;MACxB,IAAI,IAAI,CAACjD,gBAAgB,GAAG,CAAC,EAAE;QAC7B,IAAI,CAACA,gBAAgB,EAAE;QACvBc,WAAW,CAAC,CAAC;MACf;IACF,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
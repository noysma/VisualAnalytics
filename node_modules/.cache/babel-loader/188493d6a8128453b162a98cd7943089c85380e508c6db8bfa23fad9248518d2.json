{"ast":null,"code":"const d3 = require(\"d3\");\nfunction BuildingMap() {\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n  function me(selection) {\n    const buildingTypes = d3.groups(selection.datum().map(d => d.properties.buildingType), d => d).map(d => d[0]);\n    console.log(\"buildingTypes\", buildingTypes);\n    color.domain(buildingTypes);\n    const extent = {\n      type: \"GeometryCollection\",\n      geometries: selection.datum().map(d => d.geometry)\n    };\n    const projection = d3.geoIdentity().reflectY(true).fitSize([700, 700], extent);\n    const path = d3.geoPath().projection(projection);\n    selection.selectAll(\"path\").data(selection.datum()).join(\"path\").attr(\"d\", path).attr(\"fill\", d => color(d.properties.buildingType));\n  }\n  me.color = function () {\n    return color;\n  };\n  return me;\n}\nfunction BuildingTypeLegend() {\n  let color = d3.scaleOrdinal(d3.schemeCategory10);\n  function me(selection) {\n    const legend = selection.append(\"g\").attr(\"transform\", \"translate(500, 20)\");\n    const legendItem = legend.selectAll(\"g\").data(color.domain()).join(\"g\").attr(\"transform\", (d, i) => `translate(0, ${i * 20})`);\n    legendItem.append(\"rect\").attr(\"width\", 10).attr(\"height\", 10).attr(\"fill-opacity\", 0.2).attr(\"fill\", d => color(d));\n    legendItem.append(\"text\").attr(\"x\", 15).attr(\"y\", 10).text(d => d);\n  }\n  me.color = function (_) {\n    if (!arguments.length) return color;\n    color = _;\n    return me;\n  };\n  return me;\n}\nexport { BuildingMap, BuildingTypeLegend };","map":{"version":3,"names":["d3","require","BuildingMap","color","scaleOrdinal","schemeCategory10","me","selection","buildingTypes","groups","datum","map","d","properties","buildingType","console","log","domain","extent","type","geometries","geometry","projection","geoIdentity","reflectY","fitSize","path","geoPath","selectAll","data","join","attr","BuildingTypeLegend","legend","append","legendItem","i","text","_","arguments","length"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/BuildingMap.js"],"sourcesContent":["const d3 = require(\"d3\");\n\nfunction BuildingMap(){\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    function me(selection){\n\n        const buildingTypes = d3.groups(selection.datum()\n            .map(d => d.properties.buildingType), d=>d).map(d => d[0]);\n\n        console.log(\"buildingTypes\", buildingTypes);\n        color.domain(buildingTypes);\n\n        const extent = {\n            type: \"GeometryCollection\",\n            geometries: selection.datum().map(d => d.geometry)\n        };\n\n        const projection = d3.geoIdentity().reflectY(true).fitSize([700, 700], extent);\n        const path = d3.geoPath().projection(projection);\n\n        selection.selectAll(\"path\")\n            .data(selection.datum())\n            .join(\"path\")\n            .attr(\"d\", path)\n            .attr(\"fill\", d => color(d.properties.buildingType))\n    }\n\n    me.color = function(){\n        return color;\n    }\n\n    return me;\n}\n\nfunction BuildingTypeLegend(){\n    let color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    function me(selection){\n        const legend = selection.append(\"g\")\n            .attr(\"transform\", \"translate(500, 20)\");\n\n        const legendItem = legend.selectAll(\"g\")\n            .data(color.domain())\n            .join(\"g\")\n            .attr(\"transform\", (d, i) => `translate(0, ${i*20})`);\n\n        legendItem.append(\"rect\")\n            .attr(\"width\", 10)\n            .attr(\"height\", 10)\n            .attr(\"fill-opacity\", 0.2)\n            .attr(\"fill\", d => color(d));\n\n        legendItem.append(\"text\")\n            .attr(\"x\", 15)\n            .attr(\"y\", 10)\n            .text(d => d);\n    }\n\n    me.color = function(_){\n        if (!arguments.length) return color;\n        color = _;\n        return me;\n    }\n\n    return me;\n}\n\nexport {\n    BuildingMap,\n    BuildingTypeLegend\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as d3 from 'd3';\nimport { startOfWeek, endOfWeek, eachDayOfInterval } from 'date-fns';\nexport function createBarChart(svg, data) {\n  // Impostazioni del grafico\n  var margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n  var width = 800 - margin.left - margin.right;\n  var height = 400 - margin.top - margin.bottom;\n\n  // Creazione dello scale per gli assi\n  var x = d3.scaleBand().range([0, width]).padding(0.1);\n  var y = d3.scaleLinear().range([height, 0]);\n\n  // Imposta il dominio degli assi\n  var weekdays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  x.domain(weekdays);\n  y.domain([0, d3.max(data, function (d) {\n    return d.travelDuration;\n  })]);\n\n  // Aggiungi l'asse x al grafico\n  svg.append(\"g\").attr(\"class\", \"x-axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x));\n\n  // Funzione per aggiornare il grafico\n  function updateChart(startDate, endDate) {\n    // Filtra i dati per la settimana selezionata\n    var filteredData = data.filter(function (d) {\n      var date = new Date(d.date);\n      return date >= startDate && date <= endDate;\n    });\n\n    // Rimuovi eventuali barre precedenti\n    svg.selectAll(\".bar\").remove();\n\n    // Aggiungi le nuove barre\n    svg.selectAll(\".bar\").data(filteredData).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", function (d) {\n      return x(weekdays[new Date(d.date).getDay()]);\n    }).attr(\"width\", x.bandwidth()).attr(\"y\", function (d) {\n      return y(d.travelDuration);\n    }).attr(\"height\", function (d) {\n      return height - y(d.travelDuration);\n    });\n  }\n\n  // Esporta la funzione di aggiornamento\n  return updateChart;\n}","map":{"version":3,"names":["d3","startOfWeek","endOfWeek","eachDayOfInterval","createBarChart","svg","data","margin","top","right","bottom","left","width","height","x","scaleBand","range","padding","y","scaleLinear","weekdays","domain","max","d","travelDuration","append","attr","call","axisBottom","updateChart","startDate","endDate","filteredData","filter","date","Date","selectAll","remove","enter","getDay","bandwidth"],"sources":["/Users/camillachiruzzi/vastprof/VAST2022Vue/src/assets/TrafficPlot.js"],"sourcesContent":["import * as d3 from 'd3';\nimport {startOfWeek, endOfWeek, eachDayOfInterval } from 'date-fns';\n\nexport function createBarChart(svg, data) {\n  // Impostazioni del grafico\n  var margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  var width = 800 - margin.left - margin.right;\n  var height = 400 - margin.top - margin.bottom;\n\n  // Creazione dello scale per gli assi\n  var x = d3.scaleBand()\n    .range([0, width])\n    .padding(0.1);\n\n  var y = d3.scaleLinear()\n    .range([height, 0]);\n\n  // Imposta il dominio degli assi\n  var weekdays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  x.domain(weekdays);\n  y.domain([0, d3.max(data, function (d) { return d.travelDuration; })]);\n\n  // Aggiungi l'asse x al grafico\n  svg.append(\"g\")\n    .attr(\"class\", \"x-axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x));\n\n  // Funzione per aggiornare il grafico\n  function updateChart(startDate, endDate) {\n    // Filtra i dati per la settimana selezionata\n    var filteredData = data.filter(function (d) {\n      var date = new Date(d.date);\n      return date >= startDate && date <= endDate;\n    });\n\n    // Rimuovi eventuali barre precedenti\n    svg.selectAll(\".bar\").remove();\n\n    // Aggiungi le nuove barre\n    svg.selectAll(\".bar\")\n      .data(filteredData)\n      .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", function (d) { return x(weekdays[new Date(d.date).getDay()]); })\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", function (d) { return y(d.travelDuration); })\n      .attr(\"height\", function (d) { return height - y(d.travelDuration); });\n  }\n\n  // Esporta la funzione di aggiornamento\n  return updateChart;\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}